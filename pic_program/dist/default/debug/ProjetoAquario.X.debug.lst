

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sat Sep 30 13:59:10 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    36  0000                     
    37                           ; Version 1.41
    38                           ; Generated 25/01/2017 GMT
    39                           ; 
    40                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F4550 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     
    72                           	psect	idataCOMRAM
    73  000BE6                     __pidataCOMRAM:
    74                           	opt stack 0
    75                           
    76                           ;initializer for _temperatura_des
    77  000BE6  17                 	db	23
    78                           
    79                           ;initializer for _minuto_refeicao
    80  000BE7  3D                 	db	61
    81                           
    82                           ;initializer for _hora_refeicao
    83  000BE8  19                 	db	25
    84  0000                     _RCREG	set	4014
    85  0000                     _TXREG	set	4013
    86  0000                     _RCSTAbits	set	4011
    87  0000                     _TXSTAbits	set	4012
    88  0000                     _SPBRG	set	4015
    89  0000                     _PR2	set	4043
    90  0000                     _T2CONbits	set	4042
    91  0000                     _CCPR1L	set	4030
    92  0000                     _CCP1CON	set	4029
    93  0000                     _ADRESL	set	4035
    94  0000                     _ADRESH	set	4036
    95  0000                     _ADCON0bits	set	4034
    96  0000                     _ADCON2	set	4032
    97  0000                     _ADCON0	set	4034
    98  0000                     _PIE2bits	set	4000
    99  0000                     _PIE1bits	set	3997
   100  0000                     _TMR1H	set	4047
   101  0000                     _TMR1L	set	4046
   102  0000                     _T1CONbits	set	4045
   103  0000                     _CCP2CON	set	4026
   104  0000                     _TMR3H	set	4019
   105  0000                     _TMR3L	set	4018
   106  0000                     _T3CONbits	set	4017
   107  0000                     _T0CONbits	set	4053
   108  0000                     _TRISAbits	set	3986
   109  0000                     _TRISCbits	set	3988
   110  0000                     _PIR1bits	set	3998
   111  0000                     _CCPR2H	set	4028
   112  0000                     _CCPR2L	set	4027
   113  0000                     _PORTCbits	set	3970
   114  0000                     _PIR2bits	set	4001
   115  0000                     _TMR0H	set	4055
   116  0000                     _TMR0L	set	4054
   117  0000                     _INTCONbits	set	4082
   118  0000                     _TRISE	set	3990
   119  0000                     _TRISD	set	3989
   120  0000                     _TRISC	set	3988
   121  0000                     _TRISB	set	3987
   122  0000                     _TRISA	set	3986
   123  0000                     _ADCON1	set	4033
   124                           
   125                           ; #config settings
   126  0000                     
   127                           	psect	cinit
   128  000B3A                     __pcinit:
   129                           	opt stack 0
   130  000B3A                     start_initialization:
   131                           	opt stack 0
   132  000B3A                     __initialization:
   133                           	opt stack 0
   134                           
   135                           ; Initialize objects allocated to COMRAM (3 bytes)
   136                           ; load TBLPTR registers with __pidataCOMRAM
   137  000B3A  0EE6               	movlw	low __pidataCOMRAM
   138  000B3C  6EF6               	movwf	tblptrl,c
   139  000B3E  0E0B               	movlw	high __pidataCOMRAM
   140  000B40  6EF7               	movwf	tblptrh,c
   141  000B42  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   142  000B44  6EF8               	movwf	tblptru,c
   143  000B46  0009               	tblrd		*+	;fetch initializer
   144  000B48  CFF5 F039          	movff	tablat,__pdataCOMRAM
   145  000B4C  0009               	tblrd		*+	;fetch initializer
   146  000B4E  CFF5 F03A          	movff	tablat,__pdataCOMRAM+1
   147  000B52  0009               	tblrd		*+	;fetch initializer
   148  000B54  CFF5 F03B          	movff	tablat,__pdataCOMRAM+2
   149                           
   150                           ; Clear objects allocated to BANK0 (5 bytes)
   151  000B58  0100               	movlb	0
   152  000B5A  6B82               	clrf	(__pbssBANK0+4)& (0+255),b
   153  000B5C  6B81               	clrf	(__pbssBANK0+3)& (0+255),b
   154  000B5E  6B80               	clrf	(__pbssBANK0+2)& (0+255),b
   155  000B60  6B7F               	clrf	(__pbssBANK0+1)& (0+255),b
   156  000B62  6B7E               	clrf	__pbssBANK0& (0+255),b
   157                           
   158                           ; Clear objects allocated to COMRAM (10 bytes)
   159  000B64  EE00  F02F         	lfsr	0,__pbssCOMRAM
   160  000B68  0E0A               	movlw	10
   161  000B6A                     clear_0:
   162  000B6A  6AEE               	clrf	postinc0,c
   163  000B6C  06E8               	decf	wreg,f,c
   164  000B6E  E1FD               	bnz	clear_0
   165  000B70                     end_of_initialization:
   166                           	opt stack 0
   167  000B70                     __end_of__initialization:
   168                           	opt stack 0
   169  000B70  903C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   170  000B72  923C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   171  000B74  0E00               	movlw	low (__Lmediumconst shr (0+16))
   172  000B76  6EF8               	movwf	tblptru,c
   173  000B78  0100               	movlb	0
   174  000B7A  EFBF  F005         	goto	_main	;jump to C main() function
   175                           tblptru	equ	0xFF8
   176                           tblptrh	equ	0xFF7
   177                           tblptrl	equ	0xFF6
   178                           tablat	equ	0xFF5
   179                           postinc0	equ	0xFEE
   180                           wreg	equ	0xFE8
   181                           
   182                           	psect	bssCOMRAM
   183  00002F                     __pbssCOMRAM:
   184                           	opt stack 0
   185  00002F                     _temperatura:
   186                           	opt stack 0
   187  00002F                     	ds	2
   188  000031                     _temp:
   189                           	opt stack 0
   190  000031                     	ds	2
   191  000033                     _gira_servo:
   192                           	opt stack 0
   193  000033                     	ds	1
   194  000034                     _segundo:
   195                           	opt stack 0
   196  000034                     	ds	1
   197  000035                     _minuto:
   198                           	opt stack 0
   199  000035                     	ds	1
   200  000036                     _hora:
   201                           	opt stack 0
   202  000036                     	ds	1
   203  000037                     _aquec_on:
   204                           	opt stack 0
   205  000037                     	ds	1
   206  000038                     _vent_on:
   207                           	opt stack 0
   208  000038                     	ds	1
   209                           tblptru	equ	0xFF8
   210                           tblptrh	equ	0xFF7
   211                           tblptrl	equ	0xFF6
   212                           tablat	equ	0xFF5
   213                           postinc0	equ	0xFEE
   214                           wreg	equ	0xFE8
   215                           
   216                           	psect	dataCOMRAM
   217  000039                     __pdataCOMRAM:
   218                           	opt stack 0
   219  000039                     _temperatura_des:
   220                           	opt stack 0
   221  000039                     	ds	1
   222  00003A                     _minuto_refeicao:
   223                           	opt stack 0
   224  00003A                     	ds	1
   225  00003B                     _hora_refeicao:
   226                           	opt stack 0
   227  00003B                     	ds	1
   228                           tblptru	equ	0xFF8
   229                           tblptrh	equ	0xFF7
   230                           tblptrl	equ	0xFF6
   231                           tablat	equ	0xFF5
   232                           postinc0	equ	0xFEE
   233                           wreg	equ	0xFE8
   234                           
   235                           	psect	bssBANK0
   236  00007E                     __pbssBANK0:
   237                           	opt stack 0
   238  00007E                     _buffer:
   239                           	opt stack 0
   240  00007E                     	ds	5
   241                           tblptru	equ	0xFF8
   242                           tblptrh	equ	0xFF7
   243                           tblptrl	equ	0xFF6
   244                           tablat	equ	0xFF5
   245                           postinc0	equ	0xFEE
   246                           wreg	equ	0xFE8
   247                           
   248                           	psect	cstackBANK0
   249  000060                     __pcstackBANK0:
   250                           	opt stack 0
   251  000060                     ?_adc_amostra:
   252                           	opt stack 0
   253  000060                     ?___lmul:
   254                           	opt stack 0
   255  000060                     ?___aldiv:
   256                           	opt stack 0
   257  000060                     serial_tx@val:
   258                           	opt stack 0
   259  000060                     atraso_ms@valor:
   260                           	opt stack 0
   261  000060                     ___lmul@multiplier:
   262                           	opt stack 0
   263  000060                     ___aldiv@dividend:
   264                           	opt stack 0
   265                           
   266                           ; 4 bytes @ 0x0
   267  000060                     	ds	2
   268  000062                     ??_adc_amostra:
   269  000062                     atraso_ms@i:
   270                           	opt stack 0
   271                           
   272                           ; 2 bytes @ 0x2
   273  000062                     	ds	2
   274  000064                     atraso_ms@j1:
   275                           	opt stack 0
   276  000064                     ___lmul@multiplicand:
   277                           	opt stack 0
   278  000064                     ___aldiv@divisor:
   279                           	opt stack 0
   280                           
   281                           ; 4 bytes @ 0x4
   282  000064                     	ds	1
   283  000065                     atraso_ms@j2:
   284                           	opt stack 0
   285                           
   286                           ; 1 bytes @ 0x5
   287  000065                     	ds	1
   288  000066                     adc_amostra@canal:
   289                           	opt stack 0
   290  000066                     serial_rx_str_until@buff:
   291                           	opt stack 0
   292                           
   293                           ; 2 bytes @ 0x6
   294  000066                     	ds	2
   295  000068                     ___aldiv@counter:
   296                           	opt stack 0
   297  000068                     serial_rx_str_until@size:
   298                           	opt stack 0
   299  000068                     ___lmul@product:
   300                           	opt stack 0
   301                           
   302                           ; 4 bytes @ 0x8
   303  000068                     	ds	1
   304  000069                     ___aldiv@sign:
   305                           	opt stack 0
   306                           
   307                           ; 1 bytes @ 0x9
   308  000069                     	ds	1
   309  00006A                     serial_rx_str_until@term:
   310                           	opt stack 0
   311  00006A                     ___aldiv@quotient:
   312                           	opt stack 0
   313                           
   314                           ; 4 bytes @ 0xA
   315  00006A                     	ds	1
   316  00006B                     ??_serial_rx_str_until:
   317                           
   318                           ; 1 bytes @ 0xB
   319  00006B                     	ds	1
   320  00006C                     ?___lldiv:
   321                           	opt stack 0
   322  00006C                     ___lldiv@dividend:
   323                           	opt stack 0
   324                           
   325                           ; 4 bytes @ 0xC
   326  00006C                     	ds	2
   327  00006E                     PWM1_Init@f:
   328                           	opt stack 0
   329                           
   330                           ; 2 bytes @ 0xE
   331  00006E                     	ds	2
   332  000070                     ??_PWM1_Init:
   333  000070                     serial_rx_str_until@i:
   334                           	opt stack 0
   335  000070                     ___lldiv@divisor:
   336                           	opt stack 0
   337                           
   338                           ; 4 bytes @ 0x10
   339  000070                     	ds	2
   340  000072                     ??_loop:
   341                           
   342                           ; 1 bytes @ 0x12
   343  000072                     	ds	2
   344  000074                     PWM1_Init@temp:
   345                           	opt stack 0
   346  000074                     ___lldiv@quotient:
   347                           	opt stack 0
   348                           
   349                           ; 4 bytes @ 0x14
   350  000074                     	ds	4
   351  000078                     ___lldiv@counter:
   352                           	opt stack 0
   353                           
   354                           ; 1 bytes @ 0x18
   355  000078                     	ds	1
   356  000079                     ??_PWM1_Set_Duty:
   357                           
   358                           ; 1 bytes @ 0x19
   359  000079                     	ds	2
   360  00007B                     PWM1_Set_Duty@d:
   361                           	opt stack 0
   362                           
   363                           ; 1 bytes @ 0x1B
   364  00007B                     	ds	1
   365  00007C                     PWM1_Set_Duty@temp:
   366                           	opt stack 0
   367                           
   368                           ; 2 bytes @ 0x1C
   369  00007C                     	ds	2
   370  00007E                     tblptru	equ	0xFF8
   371                           tblptrh	equ	0xFF7
   372                           tblptrl	equ	0xFF6
   373                           tablat	equ	0xFF5
   374                           postinc0	equ	0xFEE
   375                           wreg	equ	0xFE8
   376                           
   377                           ; 1 bytes @ 0x1E
   378                           
   379                           	psect	cstackCOMRAM
   380  000001                     __pcstackCOMRAM:
   381                           	opt stack 0
   382  000001                     ?i2_adc_amostra:
   383                           	opt stack 0
   384  000001                     ?i2___lmul:
   385                           	opt stack 0
   386  000001                     i2___lmul@multiplier:
   387                           	opt stack 0
   388                           
   389                           ; 4 bytes @ 0x0
   390  000001                     	ds	2
   391  000003                     ??i2_adc_amostra:
   392                           
   393                           ; 1 bytes @ 0x2
   394  000003                     	ds	2
   395  000005                     i2___lmul@multiplicand:
   396                           	opt stack 0
   397                           
   398                           ; 4 bytes @ 0x4
   399  000005                     	ds	2
   400  000007                     i2adc_amostra@canal:
   401                           	opt stack 0
   402                           
   403                           ; 1 bytes @ 0x6
   404  000007                     	ds	2
   405  000009                     i2___lmul@product:
   406                           	opt stack 0
   407                           
   408                           ; 4 bytes @ 0x8
   409  000009                     	ds	4
   410  00000D                     ?i2___lldiv:
   411                           	opt stack 0
   412  00000D                     i2___lldiv@dividend:
   413                           	opt stack 0
   414                           
   415                           ; 4 bytes @ 0xC
   416  00000D                     	ds	4
   417  000011                     i2___lldiv@divisor:
   418                           	opt stack 0
   419                           
   420                           ; 4 bytes @ 0x10
   421  000011                     	ds	4
   422  000015                     i2___lldiv@quotient:
   423                           	opt stack 0
   424                           
   425                           ; 4 bytes @ 0x14
   426  000015                     	ds	4
   427  000019                     i2___lldiv@counter:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0x18
   431  000019                     	ds	1
   432  00001A                     ??i2_PWM1_Set_Duty:
   433                           
   434                           ; 1 bytes @ 0x19
   435  00001A                     	ds	2
   436  00001C                     i2PWM1_Set_Duty@d:
   437                           	opt stack 0
   438                           
   439                           ; 1 bytes @ 0x1B
   440  00001C                     	ds	1
   441  00001D                     i2PWM1_Set_Duty@temp:
   442                           	opt stack 0
   443                           
   444                           ; 2 bytes @ 0x1C
   445  00001D                     	ds	2
   446  00001F                     ??_itrp:
   447                           
   448                           ; 1 bytes @ 0x1E
   449  00001F                     	ds	16
   450                           tblptru	equ	0xFF8
   451                           tblptrh	equ	0xFF7
   452                           tblptrl	equ	0xFF6
   453                           tablat	equ	0xFF5
   454                           postinc0	equ	0xFEE
   455                           wreg	equ	0xFE8
   456                           
   457 ;;
   458 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   459 ;;
   460 ;; *************** function _main *****************
   461 ;; Defined at:
   462 ;;		line 79 in file "config.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;		None
   465 ;; Auto vars:     Size  Location     Type
   466 ;;		None
   467 ;; Return value:  Size  Location     Type
   468 ;;                  1    wreg      void 
   469 ;; Registers used:
   470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   471 ;; Tracked objects:
   472 ;;		On entry : 0/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   476 ;;      Params:         0       0       0       0       0       0       0       0       0
   477 ;;      Locals:         0       0       0       0       0       0       0       0       0
   478 ;;      Temps:          0       0       0       0       0       0       0       0       0
   479 ;;      Totals:         0       0       0       0       0       0       0       0       0
   480 ;;Total ram usage:        0 bytes
   481 ;; Hardware stack levels required when called:    6
   482 ;; This function calls:
   483 ;;		_loop
   484 ;;		_setup
   485 ;; This function is called by:
   486 ;;		Startup code after reset
   487 ;; This function uses a non-reentrant model
   488 ;;
   489                           
   490                           	psect	text0
   491  000B7E                     __ptext0:
   492                           	opt stack 0
   493  000B7E                     _main:
   494                           	opt stack 25
   495                           
   496                           ;config.c: 81: ADCON1=0x0C;
   497                           
   498                           ;incstack = 0
   499  000B7E  0E0C               	movlw	12
   500  000B80  6EC1               	movwf	4033,c	;volatile
   501                           
   502                           ;config.c: 82: TRISA=0xC3;
   503  000B82  0EC3               	movlw	195
   504  000B84  6E92               	movwf	3986,c	;volatile
   505                           
   506                           ;config.c: 83: TRISB=0x07;
   507  000B86  0E07               	movlw	7
   508  000B88  6E93               	movwf	3987,c	;volatile
   509                           
   510                           ;config.c: 84: TRISC=0x01;
   511  000B8A  0E01               	movlw	1
   512  000B8C  6E94               	movwf	3988,c	;volatile
   513                           
   514                           ;config.c: 85: TRISD=0x00;
   515  000B8E  0E00               	movlw	0
   516  000B90  6E95               	movwf	3989,c	;volatile
   517                           
   518                           ;config.c: 86: TRISE=0x00;
   519  000B92  0E00               	movlw	0
   520  000B94  6E96               	movwf	3990,c	;volatile
   521                           
   522                           ;config.c: 88: setup();
   523  000B96  EC25  F004         	call	_setup	;wreg free
   524  000B9A                     l2107:
   525                           
   526                           ;config.c: 91: {
   527                           ;config.c: 92: loop();
   528  000B9A  ECA7  F002         	call	_loop	;wreg free
   529  000B9E  D7FD               	goto	l2107
   530  000BA0                     __end_of_main:
   531                           	opt stack 0
   532                           tblptru	equ	0xFF8
   533                           tblptrh	equ	0xFF7
   534                           tblptrl	equ	0xFF6
   535                           tablat	equ	0xFF5
   536                           postinc0	equ	0xFEE
   537                           wreg	equ	0xFE8
   538                           
   539 ;; *************** function _setup *****************
   540 ;; Defined at:
   541 ;;		line 105 in file "main.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;		None
   544 ;; Auto vars:     Size  Location     Type
   545 ;;		None
   546 ;; Return value:  Size  Location     Type
   547 ;;                  1    wreg      void 
   548 ;; Registers used:
   549 ;;		wreg, status,2, status,0, cstack
   550 ;; Tracked objects:
   551 ;;		On entry : 0/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   555 ;;      Params:         0       0       0       0       0       0       0       0       0
   556 ;;      Locals:         0       0       0       0       0       0       0       0       0
   557 ;;      Temps:          0       0       0       0       0       0       0       0       0
   558 ;;      Totals:         0       0       0       0       0       0       0       0       0
   559 ;;Total ram usage:        0 bytes
   560 ;; Hardware stack levels used:    1
   561 ;; Hardware stack levels required when called:    5
   562 ;; This function calls:
   563 ;;		_PWM1_Init
   564 ;;		_PWM1_Set_Duty
   565 ;;		_PWM1_Start
   566 ;;		_adc_init
   567 ;;		_serial_init
   568 ;; This function is called by:
   569 ;;		_main
   570 ;; This function uses a non-reentrant model
   571 ;;
   572                           
   573                           	psect	text1
   574  00084A                     __ptext1:
   575                           	opt stack 0
   576  00084A                     _setup:
   577                           	opt stack 25
   578                           
   579                           ;main.c: 106: INTCONbits.GIE = 0;
   580                           
   581                           ;incstack = 0
   582  00084A  9EF2               	bcf	intcon,7,c	;volatile
   583                           
   584                           ;main.c: 107: TRISCbits.TRISC7 = 1;
   585  00084C  8E94               	bsf	3988,7,c	;volatile
   586                           
   587                           ;main.c: 108: TRISCbits.TRISC1 = 0;
   588  00084E  9294               	bcf	3988,1,c	;volatile
   589                           
   590                           ;main.c: 109: TRISAbits.TRISA2 = 1;
   591  000850  8492               	bsf	3986,2,c	;volatile
   592                           
   593                           ;main.c: 112: PORTCbits.RC5 = 0;
   594  000852  9A82               	bcf	3970,5,c	;volatile
   595                           
   596                           ;main.c: 115: T0CONbits.T08BIT = 0;
   597  000854  9CD5               	bcf	4053,6,c	;volatile
   598                           
   599                           ;main.c: 116: T0CONbits.PSA = 0;
   600  000856  96D5               	bcf	4053,3,c	;volatile
   601                           
   602                           ;main.c: 117: T0CONbits.T0CS = 0;
   603  000858  9AD5               	bcf	4053,5,c	;volatile
   604                           
   605                           ;main.c: 118: T0CONbits.T0SE = 0;
   606  00085A  98D5               	bcf	4053,4,c	;volatile
   607                           
   608                           ;main.c: 119: T0CONbits.T0PS2 = 1;
   609  00085C  84D5               	bsf	4053,2,c	;volatile
   610                           
   611                           ;main.c: 120: T0CONbits.T0PS1 = 0;
   612  00085E  92D5               	bcf	4053,1,c	;volatile
   613                           
   614                           ;main.c: 121: T0CONbits.T0PS0 = 1;
   615  000860  80D5               	bsf	4053,0,c	;volatile
   616                           
   617                           ;main.c: 122: INTCONbits.T0IE = 1;
   618  000862  8AF2               	bsf	intcon,5,c	;volatile
   619                           
   620                           ;main.c: 123: INTCONbits.T0IF = 0;
   621  000864  94F2               	bcf	intcon,2,c	;volatile
   622                           
   623                           ;main.c: 124: TMR0L = 0xEE;
   624  000866  0EEE               	movlw	238
   625  000868  6ED6               	movwf	4054,c	;volatile
   626                           
   627                           ;main.c: 125: TMR0H= 0x85;
   628  00086A  0E85               	movlw	133
   629  00086C  6ED7               	movwf	4055,c	;volatile
   630                           
   631                           ;main.c: 127: T3CONbits.TMR3CS = 0;
   632  00086E  92B1               	bcf	4017,1,c	;volatile
   633                           
   634                           ;main.c: 128: T3CONbits.T3CKPS = 0b10;
   635  000870  50B1               	movf	4017,w,c	;volatile
   636  000872  0BCF               	andlw	-49
   637  000874  0920               	iorlw	32
   638  000876  6EB1               	movwf	4017,c	;volatile
   639                           
   640                           ;main.c: 129: TMR3L = 0x18 ;
   641  000878  0E18               	movlw	24
   642  00087A  6EB2               	movwf	4018,c	;volatile
   643                           
   644                           ;main.c: 130: TMR3H= 0xFC ;
   645  00087C  0EFC               	movlw	252
   646  00087E  6EB3               	movwf	4019,c	;volatile
   647                           
   648                           ;main.c: 132: CCP2CON = 0x0B;
   649  000880  0E0B               	movlw	11
   650  000882  6EBA               	movwf	4026,c	;volatile
   651                           
   652                           ;main.c: 133: CCPR2L = 0xF4;
   653  000884  0EF4               	movlw	244
   654  000886  6EBB               	movwf	4027,c	;volatile
   655                           
   656                           ;main.c: 134: CCPR2H = 0x01;
   657  000888  0E01               	movlw	1
   658  00088A  6EBC               	movwf	4028,c	;volatile
   659                           
   660                           ;main.c: 135: T3CONbits.T3CCP1= 0;
   661  00088C  96B1               	bcf	4017,3,c	;volatile
   662                           
   663                           ;main.c: 136: T3CONbits.T3CCP2 = 1;
   664  00088E  8CB1               	bsf	4017,6,c	;volatile
   665                           
   666                           ;main.c: 138: T1CONbits.TMR1CS = 0;
   667  000890  92CD               	bcf	4045,1,c	;volatile
   668                           
   669                           ;main.c: 139: T1CONbits.T1CKPS = 0b11;
   670  000892  0E30               	movlw	48
   671  000894  12CD               	iorwf	4045,f,c	;volatile
   672                           
   673                           ;main.c: 140: TMR1L = 0x00;
   674  000896  0E00               	movlw	0
   675  000898  6ECE               	movwf	4046,c	;volatile
   676                           
   677                           ;main.c: 141: TMR1H = 0x00;
   678  00089A  0E00               	movlw	0
   679  00089C  6ECF               	movwf	4047,c	;volatile
   680                           
   681                           ;main.c: 142: PIE1bits.TMR1IE = 1;
   682  00089E  809D               	bsf	3997,0,c	;volatile
   683                           
   684                           ;main.c: 143: PIR1bits.TMR1IF = 0;
   685  0008A0  909E               	bcf	3998,0,c	;volatile
   686                           
   687                           ;main.c: 145: PIE2bits.CCP2IE = 1;
   688  0008A2  80A0               	bsf	4000,0,c	;volatile
   689                           
   690                           ;main.c: 146: PIR2bits.CCP2IF = 0;
   691  0008A4  90A1               	bcf	4001,0,c	;volatile
   692                           
   693                           ;main.c: 147: T0CONbits.TMR0ON = 1;
   694  0008A6  8ED5               	bsf	4053,7,c	;volatile
   695                           
   696                           ;main.c: 148: T1CONbits.TMR1ON = 1;
   697  0008A8  80CD               	bsf	4045,0,c	;volatile
   698                           
   699                           ;main.c: 149: T3CONbits.TMR3ON = 1;
   700  0008AA  80B1               	bsf	4017,0,c	;volatile
   701                           
   702                           ;main.c: 150: INTCONbits.PEIE = 1;
   703  0008AC  8CF2               	bsf	intcon,6,c	;volatile
   704                           
   705                           ;main.c: 151: INTCONbits.GIE = 1;
   706  0008AE  8EF2               	bsf	intcon,7,c	;volatile
   707                           
   708                           ;main.c: 152: serial_init();
   709  0008B0  ECDB  F005         	call	_serial_init	;wreg free
   710                           
   711                           ;main.c: 153: PWM1_Init(5000);
   712  0008B4  0E13               	movlw	19
   713  0008B6  0100               	movlb	0	; () banked
   714  0008B8  6F6F               	movwf	(PWM1_Init@f+1)& (0+255),b
   715  0008BA  0E88               	movlw	136
   716  0008BC  6F6E               	movwf	PWM1_Init@f& (0+255),b
   717  0008BE  EC21  F002         	call	_PWM1_Init	;wreg free
   718                           
   719                           ;main.c: 154: PWM1_Set_Duty(0);
   720  0008C2  0E00               	movlw	0
   721  0008C4  EC85  F003         	call	_PWM1_Set_Duty
   722                           
   723                           ;main.c: 155: PWM1_Start();
   724  0008C8  ECD0  F005         	call	_PWM1_Start	;wreg free
   725                           
   726                           ;main.c: 156: adc_init();
   727  0008CC  ECE5  F005         	call	_adc_init	;wreg free
   728  0008D0  0012               	return		;funcret
   729  0008D2                     __end_of_setup:
   730                           	opt stack 0
   731                           tblptru	equ	0xFF8
   732                           tblptrh	equ	0xFF7
   733                           tblptrl	equ	0xFF6
   734                           tablat	equ	0xFF5
   735                           intcon	equ	0xFF2
   736                           postinc0	equ	0xFEE
   737                           wreg	equ	0xFE8
   738                           
   739 ;; *************** function _serial_init *****************
   740 ;; Defined at:
   741 ;;		line 35 in file "serial.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;		None
   744 ;; Auto vars:     Size  Location     Type
   745 ;;		None
   746 ;; Return value:  Size  Location     Type
   747 ;;                  1    wreg      void 
   748 ;; Registers used:
   749 ;;		wreg, status,2
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   755 ;;      Params:         0       0       0       0       0       0       0       0       0
   756 ;;      Locals:         0       0       0       0       0       0       0       0       0
   757 ;;      Temps:          0       0       0       0       0       0       0       0       0
   758 ;;      Totals:         0       0       0       0       0       0       0       0       0
   759 ;;Total ram usage:        0 bytes
   760 ;; Hardware stack levels used:    1
   761 ;; Hardware stack levels required when called:    3
   762 ;; This function calls:
   763 ;;		Nothing
   764 ;; This function is called by:
   765 ;;		_setup
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           	psect	text2
   770  000BB6                     __ptext2:
   771                           	opt stack 0
   772  000BB6                     _serial_init:
   773                           	opt stack 26
   774                           
   775                           ;serial.c: 40: SPBRG=((8000000/(16l*9600))-1);
   776                           
   777                           ;incstack = 0
   778  000BB6  0E33               	movlw	51
   779  000BB8  6EAF               	movwf	4015,c	;volatile
   780                           
   781                           ;serial.c: 41: TXSTAbits.BRGH=1;
   782  000BBA  84AC               	bsf	4012,2,c	;volatile
   783                           
   784                           ;serial.c: 48: TXSTAbits.TX9=0;
   785  000BBC  9CAC               	bcf	4012,6,c	;volatile
   786                           
   787                           ;serial.c: 49: TXSTAbits.TXEN=1;
   788  000BBE  8AAC               	bsf	4012,5,c	;volatile
   789                           
   790                           ;serial.c: 50: TXSTAbits.SYNC=0;
   791  000BC0  98AC               	bcf	4012,4,c	;volatile
   792                           
   793                           ;serial.c: 51: RCSTAbits.SPEN=1;
   794  000BC2  8EAB               	bsf	4011,7,c	;volatile
   795                           
   796                           ;serial.c: 52: RCSTAbits.RX9=0;
   797  000BC4  9CAB               	bcf	4011,6,c	;volatile
   798                           
   799                           ;serial.c: 53: RCSTAbits.CREN=1;
   800  000BC6  88AB               	bsf	4011,4,c	;volatile
   801  000BC8  0012               	return		;funcret
   802  000BCA                     __end_of_serial_init:
   803                           	opt stack 0
   804                           tblptru	equ	0xFF8
   805                           tblptrh	equ	0xFF7
   806                           tblptrl	equ	0xFF6
   807                           tablat	equ	0xFF5
   808                           intcon	equ	0xFF2
   809                           postinc0	equ	0xFEE
   810                           wreg	equ	0xFE8
   811                           
   812 ;; *************** function _adc_init *****************
   813 ;; Defined at:
   814 ;;		line 30 in file "adc.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;		None
   817 ;; Auto vars:     Size  Location     Type
   818 ;;		None
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		wreg, status,2
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   828 ;;      Params:         0       0       0       0       0       0       0       0       0
   829 ;;      Locals:         0       0       0       0       0       0       0       0       0
   830 ;;      Temps:          0       0       0       0       0       0       0       0       0
   831 ;;      Totals:         0       0       0       0       0       0       0       0       0
   832 ;;Total ram usage:        0 bytes
   833 ;; Hardware stack levels used:    1
   834 ;; Hardware stack levels required when called:    3
   835 ;; This function calls:
   836 ;;		Nothing
   837 ;; This function is called by:
   838 ;;		_setup
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842                           	psect	text3
   843  000BCA                     __ptext3:
   844                           	opt stack 0
   845  000BCA                     _adc_init:
   846                           	opt stack 26
   847                           
   848                           ;adc.c: 36: ADCON0=0x01;
   849                           
   850                           ;incstack = 0
   851  000BCA  0E01               	movlw	1
   852  000BCC  6EC2               	movwf	4034,c	;volatile
   853                           
   854                           ;adc.c: 37: ADCON1=0x0C;
   855  000BCE  0E0C               	movlw	12
   856  000BD0  6EC1               	movwf	4033,c	;volatile
   857                           
   858                           ;adc.c: 38: ADCON2=0x01;
   859  000BD2  0E01               	movlw	1
   860  000BD4  6EC0               	movwf	4032,c	;volatile
   861  000BD6  0012               	return		;funcret
   862  000BD8                     __end_of_adc_init:
   863                           	opt stack 0
   864                           tblptru	equ	0xFF8
   865                           tblptrh	equ	0xFF7
   866                           tblptrl	equ	0xFF6
   867                           tablat	equ	0xFF5
   868                           intcon	equ	0xFF2
   869                           postinc0	equ	0xFEE
   870                           wreg	equ	0xFE8
   871                           
   872 ;; *************** function _PWM1_Start *****************
   873 ;; Defined at:
   874 ;;		line 79 in file "pwm.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;		None
   877 ;; Auto vars:     Size  Location     Type
   878 ;;		None
   879 ;; Return value:  Size  Location     Type
   880 ;;                  1    wreg      void 
   881 ;; Registers used:
   882 ;;		wreg, status,2
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   888 ;;      Params:         0       0       0       0       0       0       0       0       0
   889 ;;      Locals:         0       0       0       0       0       0       0       0       0
   890 ;;      Temps:          0       0       0       0       0       0       0       0       0
   891 ;;      Totals:         0       0       0       0       0       0       0       0       0
   892 ;;Total ram usage:        0 bytes
   893 ;; Hardware stack levels used:    1
   894 ;; Hardware stack levels required when called:    3
   895 ;; This function calls:
   896 ;;		Nothing
   897 ;; This function is called by:
   898 ;;		_setup
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           	psect	text4
   903  000BA0                     __ptext4:
   904                           	opt stack 0
   905  000BA0                     _PWM1_Start:
   906                           	opt stack 26
   907                           
   908                           ;pwm.c: 82: TRISCbits.TRISC2=0;
   909                           
   910                           ;incstack = 0
   911  000BA0  9494               	bcf	3988,2,c	;volatile
   912                           
   913                           ;pwm.c: 84: CCP1CON=0x0C;
   914  000BA2  0E0C               	movlw	12
   915  000BA4  6EBD               	movwf	4029,c	;volatile
   916                           
   917                           ;pwm.c: 86: T2CONbits.TMR2ON=1;
   918  000BA6  84CA               	bsf	4042,2,c	;volatile
   919                           
   920                           ;pwm.c: 90: PIR1bits.TMR2IF=0;
   921  000BA8  929E               	bcf	3998,1,c	;volatile
   922  000BAA                     l206:
   923  000BAA  A29E               	btfss	3998,1,c	;volatile
   924  000BAC  D7FE               	goto	l206
   925                           
   926                           ;pwm.c: 92: PIR1bits.TMR2IF=0;
   927  000BAE  929E               	bcf	3998,1,c	;volatile
   928  000BB0                     l209:
   929  000BB0  B29E               	btfsc	3998,1,c	;volatile
   930  000BB2  0012               	return	
   931  000BB4  D7FD               	goto	l209
   932  000BB6                     __end_of_PWM1_Start:
   933                           	opt stack 0
   934                           tblptru	equ	0xFF8
   935                           tblptrh	equ	0xFF7
   936                           tblptrl	equ	0xFF6
   937                           tablat	equ	0xFF5
   938                           intcon	equ	0xFF2
   939                           postinc0	equ	0xFEE
   940                           wreg	equ	0xFE8
   941                           
   942 ;; *************** function _PWM1_Set_Duty *****************
   943 ;; Defined at:
   944 ;;		line 105 in file "pwm.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;  d               1    wreg     unsigned char 
   947 ;; Auto vars:     Size  Location     Type
   948 ;;  d               1   27[BANK0 ] unsigned char 
   949 ;;  temp            2   28[BANK0 ] unsigned int 
   950 ;; Return value:  Size  Location     Type
   951 ;;                  1    wreg      void 
   952 ;; Registers used:
   953 ;;		wreg, status,2, status,0, cstack
   954 ;; Tracked objects:
   955 ;;		On entry : 0/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   959 ;;      Params:         0       0       0       0       0       0       0       0       0
   960 ;;      Locals:         0       3       0       0       0       0       0       0       0
   961 ;;      Temps:          0       2       0       0       0       0       0       0       0
   962 ;;      Totals:         0       5       0       0       0       0       0       0       0
   963 ;;Total ram usage:        5 bytes
   964 ;; Hardware stack levels used:    1
   965 ;; Hardware stack levels required when called:    4
   966 ;; This function calls:
   967 ;;		___lldiv
   968 ;;		___lmul
   969 ;; This function is called by:
   970 ;;		_setup
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           	psect	text5
   975  00070A                     __ptext5:
   976                           	opt stack 0
   977  00070A                     _PWM1_Set_Duty:
   978                           	opt stack 25
   979                           
   980                           ;incstack = 0
   981                           ;PWM1_Set_Duty@d stored from wreg
   982  00070A  0100               	movlb	0	; () banked
   983  00070C  6F7B               	movwf	PWM1_Set_Duty@d& (0+255),b
   984                           
   985                           ;pwm.c: 107: unsigned int temp;
   986                           ;pwm.c: 109: temp=(((unsigned long)(d))*((PR2<<2)|0x03))/255;
   987  00070E  0100               	movlb	0	; () banked
   988  000710  517B               	movf	PWM1_Set_Duty@d& (0+255),w,b
   989  000712  0100               	movlb	0	; () banked
   990  000714  6F60               	movwf	___lmul@multiplier& (0+255),b
   991  000716  6B61               	clrf	(___lmul@multiplier+1)& (0+255),b
   992  000718  6B62               	clrf	(___lmul@multiplier+2)& (0+255),b
   993  00071A  6B63               	clrf	(___lmul@multiplier+3)& (0+255),b
   994  00071C  50CB               	movf	4043,w,c	;volatile
   995  00071E  0100               	movlb	0	; () banked
   996  000720  6F79               	movwf	??_PWM1_Set_Duty& (0+255),b
   997  000722  6B7A               	clrf	(??_PWM1_Set_Duty+1)& (0+255),b
   998  000724  0100               	movlb	0	; () banked
   999  000726  90D8               	bcf	status,0,c
  1000  000728  3779               	rlcf	??_PWM1_Set_Duty& (0+255),f,b
  1001  00072A  377A               	rlcf	(??_PWM1_Set_Duty+1)& (0+255),f,b
  1002  00072C  0100               	movlb	0	; () banked
  1003  00072E  90D8               	bcf	status,0,c
  1004  000730  3779               	rlcf	??_PWM1_Set_Duty& (0+255),f,b
  1005  000732  377A               	rlcf	(??_PWM1_Set_Duty+1)& (0+255),f,b
  1006  000734  0E03               	movlw	3
  1007  000736  0100               	movlb	0	; () banked
  1008  000738  1379               	iorwf	??_PWM1_Set_Duty& (0+255),f,b
  1009  00073A  0E00               	movlw	0
  1010  00073C  137A               	iorwf	(??_PWM1_Set_Duty+1)& (0+255),f,b
  1011  00073E  C079  F064         	movff	??_PWM1_Set_Duty,___lmul@multiplicand
  1012  000742  C07A  F065         	movff	??_PWM1_Set_Duty+1,___lmul@multiplicand+1
  1013  000746  0100               	movlb	0	; () banked
  1014  000748  0E00               	movlw	0
  1015  00074A  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
  1016  00074C  0EFF               	movlw	-1
  1017  00074E  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1018  000750  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1019  000752  ECAA  F004         	call	___lmul	;wreg free
  1020  000756  C060  F06C         	movff	?___lmul,___lldiv@dividend
  1021  00075A  C061  F06D         	movff	?___lmul+1,___lldiv@dividend+1
  1022  00075E  C062  F06E         	movff	?___lmul+2,___lldiv@dividend+2
  1023  000762  C063  F06F         	movff	?___lmul+3,___lldiv@dividend+3
  1024  000766  0EFF               	movlw	255
  1025  000768  0100               	movlb	0	; () banked
  1026  00076A  6F70               	movwf	___lldiv@divisor& (0+255),b
  1027  00076C  0E00               	movlw	0
  1028  00076E  6F71               	movwf	(___lldiv@divisor+1)& (0+255),b
  1029  000770  0E00               	movlw	0
  1030  000772  6F72               	movwf	(___lldiv@divisor+2)& (0+255),b
  1031  000774  0E00               	movlw	0
  1032  000776  6F73               	movwf	(___lldiv@divisor+3)& (0+255),b
  1033  000778  EC27  F003         	call	___lldiv	;wreg free
  1034  00077C  C06C  F07C         	movff	?___lldiv,PWM1_Set_Duty@temp
  1035  000780  C06D  F07D         	movff	?___lldiv+1,PWM1_Set_Duty@temp+1
  1036                           
  1037                           ;pwm.c: 111: CCPR1L= (0x03FC&temp)>>2;
  1038  000784  C07C  F079         	movff	PWM1_Set_Duty@temp,??_PWM1_Set_Duty
  1039  000788  C07D  F07A         	movff	PWM1_Set_Duty@temp+1,??_PWM1_Set_Duty+1
  1040  00078C  0100               	movlb	0	; () banked
  1041  00078E  90D8               	bcf	status,0,c
  1042  000790  337A               	rrcf	(??_PWM1_Set_Duty+1)& (0+255),f,b
  1043  000792  3379               	rrcf	??_PWM1_Set_Duty& (0+255),f,b
  1044  000794  0100               	movlb	0	; () banked
  1045  000796  90D8               	bcf	status,0,c
  1046  000798  337A               	rrcf	(??_PWM1_Set_Duty+1)& (0+255),f,b
  1047  00079A  3379               	rrcf	??_PWM1_Set_Duty& (0+255),f,b
  1048  00079C  0100               	movlb	0	; () banked
  1049  00079E  5179               	movf	??_PWM1_Set_Duty& (0+255),w,b
  1050  0007A0  6EBE               	movwf	4030,c	;volatile
  1051                           
  1052                           ; BSR set to: 0
  1053                           ;pwm.c: 112: CCP1CON=((0x0003&temp)<<4)|0x0C;
  1054  0007A2  C07C  F079         	movff	PWM1_Set_Duty@temp,??_PWM1_Set_Duty
  1055  0007A6  0E03               	movlw	3
  1056  0007A8  0100               	movlb	0	; () banked
  1057  0007AA  1779               	andwf	??_PWM1_Set_Duty& (0+255),f,b
  1058  0007AC  0100               	movlb	0	; () banked
  1059  0007AE  3979               	swapf	??_PWM1_Set_Duty& (0+255),w,b
  1060  0007B0  0BF0               	andlw	240
  1061  0007B2  090C               	iorlw	12
  1062  0007B4  6EBD               	movwf	4029,c	;volatile
  1063                           
  1064                           ; BSR set to: 0
  1065  0007B6  0012               	return		;funcret
  1066  0007B8                     __end_of_PWM1_Set_Duty:
  1067                           	opt stack 0
  1068                           tblptru	equ	0xFF8
  1069                           tblptrh	equ	0xFF7
  1070                           tblptrl	equ	0xFF6
  1071                           tablat	equ	0xFF5
  1072                           intcon	equ	0xFF2
  1073                           postinc0	equ	0xFEE
  1074                           wreg	equ	0xFE8
  1075                           status	equ	0xFD8
  1076                           
  1077 ;; *************** function ___lmul *****************
  1078 ;; Defined at:
  1079 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul32.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1082 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1083 ;; Auto vars:     Size  Location     Type
  1084 ;;  product         4    8[BANK0 ] unsigned long 
  1085 ;; Return value:  Size  Location     Type
  1086 ;;                  4    0[BANK0 ] unsigned long 
  1087 ;; Registers used:
  1088 ;;		wreg, status,2, status,0
  1089 ;; Tracked objects:
  1090 ;;		On entry : 0/0
  1091 ;;		On exit  : 0/0
  1092 ;;		Unchanged: 0/0
  1093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1094 ;;      Params:         0       8       0       0       0       0       0       0       0
  1095 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1096 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1097 ;;      Totals:         0      12       0       0       0       0       0       0       0
  1098 ;;Total ram usage:       12 bytes
  1099 ;; Hardware stack levels used:    1
  1100 ;; Hardware stack levels required when called:    3
  1101 ;; This function calls:
  1102 ;;		Nothing
  1103 ;; This function is called by:
  1104 ;;		_PWM1_Set_Duty
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108                           	psect	text6
  1109  000954                     __ptext6:
  1110                           	opt stack 0
  1111  000954                     ___lmul:
  1112                           	opt stack 25
  1113                           
  1114                           ; BSR set to: 0
  1115                           ;incstack = 0
  1116  000954  0E00               	movlw	0
  1117  000956  0100               	movlb	0	; () banked
  1118  000958  6F68               	movwf	___lmul@product& (0+255),b
  1119  00095A  0E00               	movlw	0
  1120  00095C  6F69               	movwf	(___lmul@product+1)& (0+255),b
  1121  00095E  0E00               	movlw	0
  1122  000960  6F6A               	movwf	(___lmul@product+2)& (0+255),b
  1123  000962  0E00               	movlw	0
  1124  000964  6F6B               	movwf	(___lmul@product+3)& (0+255),b
  1125  000966                     l1843:
  1126                           
  1127                           ; BSR set to: 0
  1128  000966  0100               	movlb	0	; () banked
  1129  000968  A160               	btfss	___lmul@multiplier& (0+255),0,b
  1130  00096A  D010               	goto	l1847
  1131                           
  1132                           ; BSR set to: 0
  1133  00096C  0100               	movlb	0	; () banked
  1134  00096E  5164               	movf	___lmul@multiplicand& (0+255),w,b
  1135  000970  0100               	movlb	0	; () banked
  1136  000972  2768               	addwf	___lmul@product& (0+255),f,b
  1137  000974  0100               	movlb	0	; () banked
  1138  000976  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  1139  000978  0100               	movlb	0	; () banked
  1140  00097A  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
  1141  00097C  0100               	movlb	0	; () banked
  1142  00097E  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  1143  000980  0100               	movlb	0	; () banked
  1144  000982  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
  1145  000984  0100               	movlb	0	; () banked
  1146  000986  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  1147  000988  0100               	movlb	0	; () banked
  1148  00098A  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
  1149  00098C                     l1847:
  1150                           
  1151                           ; BSR set to: 0
  1152  00098C  0100               	movlb	0	; () banked
  1153  00098E  90D8               	bcf	status,0,c
  1154  000990  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
  1155  000992  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  1156  000994  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  1157  000996  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  1158                           
  1159                           ; BSR set to: 0
  1160  000998  0100               	movlb	0	; () banked
  1161  00099A  90D8               	bcf	status,0,c
  1162  00099C  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  1163  00099E  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  1164  0009A0  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  1165  0009A2  3360               	rrcf	___lmul@multiplier& (0+255),f,b
  1166  0009A4  0100               	movlb	0	; () banked
  1167  0009A6  5160               	movf	___lmul@multiplier& (0+255),w,b
  1168  0009A8  0100               	movlb	0	; () banked
  1169  0009AA  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  1170  0009AC  0100               	movlb	0	; () banked
  1171  0009AE  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  1172  0009B0  0100               	movlb	0	; () banked
  1173  0009B2  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  1174  0009B4  A4D8               	btfss	status,2,c
  1175  0009B6  D7D7               	goto	l1843
  1176                           
  1177                           ; BSR set to: 0
  1178  0009B8  C068  F060         	movff	___lmul@product,?___lmul
  1179  0009BC  C069  F061         	movff	___lmul@product+1,?___lmul+1
  1180  0009C0  C06A  F062         	movff	___lmul@product+2,?___lmul+2
  1181  0009C4  C06B  F063         	movff	___lmul@product+3,?___lmul+3
  1182                           
  1183                           ; BSR set to: 0
  1184  0009C8  0012               	return		;funcret
  1185  0009CA                     __end_of___lmul:
  1186                           	opt stack 0
  1187                           tblptru	equ	0xFF8
  1188                           tblptrh	equ	0xFF7
  1189                           tblptrl	equ	0xFF6
  1190                           tablat	equ	0xFF5
  1191                           intcon	equ	0xFF2
  1192                           postinc0	equ	0xFEE
  1193                           wreg	equ	0xFE8
  1194                           status	equ	0xFD8
  1195                           
  1196 ;; *************** function ___lldiv *****************
  1197 ;; Defined at:
  1198 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;  dividend        4   12[BANK0 ] unsigned long 
  1201 ;;  divisor         4   16[BANK0 ] unsigned long 
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;  quotient        4   20[BANK0 ] unsigned long 
  1204 ;;  counter         1   24[BANK0 ] unsigned char 
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  4   12[BANK0 ] unsigned long 
  1207 ;; Registers used:
  1208 ;;		wreg, status,2, status,0
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1214 ;;      Params:         0       8       0       0       0       0       0       0       0
  1215 ;;      Locals:         0       5       0       0       0       0       0       0       0
  1216 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1217 ;;      Totals:         0      13       0       0       0       0       0       0       0
  1218 ;;Total ram usage:       13 bytes
  1219 ;; Hardware stack levels used:    1
  1220 ;; Hardware stack levels required when called:    3
  1221 ;; This function calls:
  1222 ;;		Nothing
  1223 ;; This function is called by:
  1224 ;;		_PWM1_Set_Duty
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228                           	psect	text7
  1229  00064E                     __ptext7:
  1230                           	opt stack 0
  1231  00064E                     ___lldiv:
  1232                           	opt stack 25
  1233                           
  1234                           ; BSR set to: 0
  1235                           ;incstack = 0
  1236  00064E  0E00               	movlw	0
  1237  000650  0100               	movlb	0	; () banked
  1238  000652  6F74               	movwf	___lldiv@quotient& (0+255),b
  1239  000654  0E00               	movlw	0
  1240  000656  6F75               	movwf	(___lldiv@quotient+1)& (0+255),b
  1241  000658  0E00               	movlw	0
  1242  00065A  6F76               	movwf	(___lldiv@quotient+2)& (0+255),b
  1243  00065C  0E00               	movlw	0
  1244  00065E  6F77               	movwf	(___lldiv@quotient+3)& (0+255),b
  1245                           
  1246                           ; BSR set to: 0
  1247  000660  0100               	movlb	0	; () banked
  1248  000662  5170               	movf	___lldiv@divisor& (0+255),w,b
  1249  000664  0100               	movlb	0	; () banked
  1250  000666  1171               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  1251  000668  0100               	movlb	0	; () banked
  1252  00066A  1172               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  1253  00066C  0100               	movlb	0	; () banked
  1254  00066E  1173               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  1255  000670  B4D8               	btfsc	status,2,c
  1256  000672  D042               	goto	l651
  1257                           
  1258                           ; BSR set to: 0
  1259  000674  0E01               	movlw	1
  1260  000676  0100               	movlb	0	; () banked
  1261  000678  6F78               	movwf	___lldiv@counter& (0+255),b
  1262  00067A  D008               	goto	l1903
  1263  00067C                     l1901:
  1264                           
  1265                           ; BSR set to: 0
  1266  00067C  0100               	movlb	0	; () banked
  1267  00067E  90D8               	bcf	status,0,c
  1268  000680  3770               	rlcf	___lldiv@divisor& (0+255),f,b
  1269  000682  3771               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  1270  000684  3772               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  1271  000686  3773               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  1272  000688  0100               	movlb	0	; () banked
  1273  00068A  2B78               	incf	___lldiv@counter& (0+255),f,b
  1274  00068C                     l1903:
  1275                           
  1276                           ; BSR set to: 0
  1277  00068C  0100               	movlb	0	; () banked
  1278  00068E  AF73               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  1279  000690  D7F5               	goto	l1901
  1280  000692                     l1905:
  1281                           
  1282                           ; BSR set to: 0
  1283  000692  0100               	movlb	0	; () banked
  1284  000694  90D8               	bcf	status,0,c
  1285  000696  3774               	rlcf	___lldiv@quotient& (0+255),f,b
  1286  000698  3775               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  1287  00069A  3776               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  1288  00069C  3777               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  1289                           
  1290                           ; BSR set to: 0
  1291  00069E  0100               	movlb	0	; () banked
  1292  0006A0  5170               	movf	___lldiv@divisor& (0+255),w,b
  1293  0006A2  0100               	movlb	0	; () banked
  1294  0006A4  5D6C               	subwf	___lldiv@dividend& (0+255),w,b
  1295  0006A6  0100               	movlb	0	; () banked
  1296  0006A8  5171               	movf	(___lldiv@divisor+1)& (0+255),w,b
  1297  0006AA  0100               	movlb	0	; () banked
  1298  0006AC  596D               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  1299  0006AE  0100               	movlb	0	; () banked
  1300  0006B0  5172               	movf	(___lldiv@divisor+2)& (0+255),w,b
  1301  0006B2  0100               	movlb	0	; () banked
  1302  0006B4  596E               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  1303  0006B6  0100               	movlb	0	; () banked
  1304  0006B8  5173               	movf	(___lldiv@divisor+3)& (0+255),w,b
  1305  0006BA  0100               	movlb	0	; () banked
  1306  0006BC  596F               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  1307  0006BE  A0D8               	btfss	status,0,c
  1308  0006C0  D012               	goto	l1913
  1309                           
  1310                           ; BSR set to: 0
  1311  0006C2  0100               	movlb	0	; () banked
  1312  0006C4  5170               	movf	___lldiv@divisor& (0+255),w,b
  1313  0006C6  0100               	movlb	0	; () banked
  1314  0006C8  5F6C               	subwf	___lldiv@dividend& (0+255),f,b
  1315  0006CA  0100               	movlb	0	; () banked
  1316  0006CC  5171               	movf	(___lldiv@divisor+1)& (0+255),w,b
  1317  0006CE  0100               	movlb	0	; () banked
  1318  0006D0  5B6D               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  1319  0006D2  0100               	movlb	0	; () banked
  1320  0006D4  5172               	movf	(___lldiv@divisor+2)& (0+255),w,b
  1321  0006D6  0100               	movlb	0	; () banked
  1322  0006D8  5B6E               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  1323  0006DA  0100               	movlb	0	; () banked
  1324  0006DC  5173               	movf	(___lldiv@divisor+3)& (0+255),w,b
  1325  0006DE  0100               	movlb	0	; () banked
  1326  0006E0  5B6F               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  1327                           
  1328                           ; BSR set to: 0
  1329  0006E2  0100               	movlb	0	; () banked
  1330  0006E4  8174               	bsf	___lldiv@quotient& (0+255),0,b
  1331  0006E6                     l1913:
  1332                           
  1333                           ; BSR set to: 0
  1334  0006E6  0100               	movlb	0	; () banked
  1335  0006E8  90D8               	bcf	status,0,c
  1336  0006EA  3373               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  1337  0006EC  3372               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  1338  0006EE  3371               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  1339  0006F0  3370               	rrcf	___lldiv@divisor& (0+255),f,b
  1340                           
  1341                           ; BSR set to: 0
  1342  0006F2  0100               	movlb	0	; () banked
  1343  0006F4  2F78               	decfsz	___lldiv@counter& (0+255),f,b
  1344  0006F6  D7CD               	goto	l1905
  1345  0006F8                     l651:
  1346                           
  1347                           ; BSR set to: 0
  1348  0006F8  C074  F06C         	movff	___lldiv@quotient,?___lldiv
  1349  0006FC  C075  F06D         	movff	___lldiv@quotient+1,?___lldiv+1
  1350  000700  C076  F06E         	movff	___lldiv@quotient+2,?___lldiv+2
  1351  000704  C077  F06F         	movff	___lldiv@quotient+3,?___lldiv+3
  1352                           
  1353                           ; BSR set to: 0
  1354  000708  0012               	return		;funcret
  1355  00070A                     __end_of___lldiv:
  1356                           	opt stack 0
  1357                           tblptru	equ	0xFF8
  1358                           tblptrh	equ	0xFF7
  1359                           tblptrl	equ	0xFF6
  1360                           tablat	equ	0xFF5
  1361                           intcon	equ	0xFF2
  1362                           postinc0	equ	0xFEE
  1363                           wreg	equ	0xFE8
  1364                           status	equ	0xFD8
  1365                           
  1366 ;; *************** function _PWM1_Init *****************
  1367 ;; Defined at:
  1368 ;;		line 31 in file "pwm.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;  f               2   14[BANK0 ] unsigned int 
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;  temp            2   20[BANK0 ] unsigned int 
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  1    wreg      void 
  1375 ;; Registers used:
  1376 ;;		wreg, status,2, status,0, cstack
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1382 ;;      Params:         0       2       0       0       0       0       0       0       0
  1383 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1384 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1385 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1386 ;;Total ram usage:        8 bytes
  1387 ;; Hardware stack levels used:    1
  1388 ;; Hardware stack levels required when called:    4
  1389 ;; This function calls:
  1390 ;;		___aldiv
  1391 ;; This function is called by:
  1392 ;;		_setup
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396                           	psect	text8
  1397  000442                     __ptext8:
  1398                           	opt stack 0
  1399  000442                     _PWM1_Init:
  1400                           	opt stack 25
  1401                           
  1402                           ;pwm.c: 33: unsigned int temp;
  1403                           ;pwm.c: 39: CCP1CON=0x00;
  1404                           
  1405                           ; BSR set to: 0
  1406                           ;incstack = 0
  1407  000442  0E00               	movlw	0
  1408  000444  6EBD               	movwf	4029,c	;volatile
  1409                           
  1410                           ;pwm.c: 40: TRISCbits.TRISC2=1;
  1411  000446  8494               	bsf	3988,2,c	;volatile
  1412                           
  1413                           ;pwm.c: 43: PORTCbits.RC2=0;
  1414  000448  9482               	bcf	3970,2,c	;volatile
  1415                           
  1416                           ;pwm.c: 45: CCPR1L=0;
  1417  00044A  0E00               	movlw	0
  1418  00044C  6EBE               	movwf	4030,c	;volatile
  1419                           
  1420                           ;pwm.c: 50: T2CONbits.TMR2ON=0;
  1421  00044E  94CA               	bcf	4042,2,c	;volatile
  1422                           
  1423                           ;pwm.c: 52: temp=8000000/(f*4l);
  1424  000450  0E00               	movlw	0
  1425  000452  0100               	movlb	0	; () banked
  1426  000454  6F60               	movwf	___aldiv@dividend& (0+255),b
  1427  000456  0E12               	movlw	18
  1428  000458  6F61               	movwf	(___aldiv@dividend+1)& (0+255),b
  1429  00045A  0E7A               	movlw	122
  1430  00045C  6F62               	movwf	(___aldiv@dividend+2)& (0+255),b
  1431  00045E  0E00               	movlw	0
  1432  000460  6F63               	movwf	(___aldiv@dividend+3)& (0+255),b
  1433  000462  0100               	movlb	0	; () banked
  1434  000464  516E               	movf	PWM1_Init@f& (0+255),w,b
  1435  000466  0100               	movlb	0	; () banked
  1436  000468  6F70               	movwf	??_PWM1_Init& (0+255),b
  1437  00046A  0100               	movlb	0	; () banked
  1438  00046C  516F               	movf	(PWM1_Init@f+1)& (0+255),w,b
  1439  00046E  0100               	movlb	0	; () banked
  1440  000470  6F71               	movwf	(??_PWM1_Init+1)& (0+255),b
  1441  000472  0100               	movlb	0	; () banked
  1442  000474  6B72               	clrf	(??_PWM1_Init+2)& (0+255),b
  1443  000476  0100               	movlb	0	; () banked
  1444  000478  6B73               	clrf	(??_PWM1_Init+3)& (0+255),b
  1445  00047A  0E02               	movlw	2
  1446  00047C                     u1715:
  1447  00047C  90D8               	bcf	status,0,c
  1448  00047E  0100               	movlb	0	; () banked
  1449  000480  3770               	rlcf	??_PWM1_Init& (0+255),f,b
  1450  000482  3771               	rlcf	(??_PWM1_Init+1)& (0+255),f,b
  1451  000484  3772               	rlcf	(??_PWM1_Init+2)& (0+255),f,b
  1452  000486  3773               	rlcf	(??_PWM1_Init+3)& (0+255),f,b
  1453  000488  2EE8               	decfsz	wreg,f,c
  1454  00048A  D7F8               	goto	u1715
  1455  00048C  C070  F064         	movff	??_PWM1_Init,___aldiv@divisor
  1456  000490  C071  F065         	movff	??_PWM1_Init+1,___aldiv@divisor+1
  1457  000494  C072  F066         	movff	??_PWM1_Init+2,___aldiv@divisor+2
  1458  000498  C073  F067         	movff	??_PWM1_Init+3,___aldiv@divisor+3
  1459  00049C  EC07  F001         	call	___aldiv	;wreg free
  1460  0004A0  C060  F074         	movff	?___aldiv,PWM1_Init@temp
  1461  0004A4  C061  F075         	movff	?___aldiv+1,PWM1_Init@temp+1
  1462                           
  1463                           ;pwm.c: 54: if (temp < 256)
  1464  0004A8  0100               	movlb	0	; () banked
  1465  0004AA  0575               	decf	(PWM1_Init@temp+1)& (0+255),w,b
  1466  0004AC  B0D8               	btfsc	status,0,c
  1467  0004AE  D005               	goto	l1971
  1468                           
  1469                           ; BSR set to: 0
  1470                           ;pwm.c: 55: {
  1471                           ;pwm.c: 56: T2CONbits.T2CKPS=0;
  1472  0004B0  0EFC               	movlw	-4
  1473  0004B2  16CA               	andwf	4042,f,c	;volatile
  1474                           
  1475                           ; BSR set to: 0
  1476                           ;pwm.c: 57: PR2=temp;
  1477  0004B4  C074  FFCB         	movff	PWM1_Init@temp,4043	;volatile
  1478                           
  1479                           ;pwm.c: 58: }
  1480  0004B8  D045               	goto	l1981
  1481  0004BA                     l1971:
  1482                           
  1483                           ; BSR set to: 0
  1484                           ;pwm.c: 59: else if(temp/4 < 256 )
  1485  0004BA  C074  F070         	movff	PWM1_Init@temp,??_PWM1_Init
  1486  0004BE  C075  F071         	movff	PWM1_Init@temp+1,??_PWM1_Init+1
  1487  0004C2  0100               	movlb	0	; () banked
  1488  0004C4  90D8               	bcf	status,0,c
  1489  0004C6  3371               	rrcf	(??_PWM1_Init+1)& (0+255),f,b
  1490  0004C8  3370               	rrcf	??_PWM1_Init& (0+255),f,b
  1491  0004CA  0100               	movlb	0	; () banked
  1492  0004CC  90D8               	bcf	status,0,c
  1493  0004CE  3371               	rrcf	(??_PWM1_Init+1)& (0+255),f,b
  1494  0004D0  3370               	rrcf	??_PWM1_Init& (0+255),f,b
  1495  0004D2  0100               	movlb	0	; () banked
  1496  0004D4  0571               	decf	(??_PWM1_Init+1)& (0+255),w,b
  1497  0004D6  B0D8               	btfsc	status,0,c
  1498  0004D8  D01A               	goto	l1977
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;pwm.c: 60: {
  1502                           ;pwm.c: 61: T2CONbits.T2CKPS=1;
  1503  0004DA  50CA               	movf	4042,w,c	;volatile
  1504  0004DC  0BFC               	andlw	-4
  1505  0004DE  0901               	iorlw	1
  1506  0004E0  6ECA               	movwf	4042,c	;volatile
  1507                           
  1508                           ; BSR set to: 0
  1509                           ;pwm.c: 62: PR2=(temp+2)/4;
  1510  0004E2  0E02               	movlw	2
  1511  0004E4  0100               	movlb	0	; () banked
  1512  0004E6  2574               	addwf	PWM1_Init@temp& (0+255),w,b
  1513  0004E8  0100               	movlb	0	; () banked
  1514  0004EA  6F70               	movwf	??_PWM1_Init& (0+255),b
  1515  0004EC  0E00               	movlw	0
  1516  0004EE  0100               	movlb	0	; () banked
  1517  0004F0  2175               	addwfc	(PWM1_Init@temp+1)& (0+255),w,b
  1518  0004F2  0100               	movlb	0	; () banked
  1519  0004F4  6F71               	movwf	(??_PWM1_Init+1)& (0+255),b
  1520  0004F6  0100               	movlb	0	; () banked
  1521  0004F8  90D8               	bcf	status,0,c
  1522  0004FA  3371               	rrcf	(??_PWM1_Init+1)& (0+255),f,b
  1523  0004FC  3370               	rrcf	??_PWM1_Init& (0+255),f,b
  1524  0004FE  0100               	movlb	0	; () banked
  1525  000500  90D8               	bcf	status,0,c
  1526  000502  3371               	rrcf	(??_PWM1_Init+1)& (0+255),f,b
  1527  000504  3370               	rrcf	??_PWM1_Init& (0+255),f,b
  1528  000506  0100               	movlb	0	; () banked
  1529  000508  5170               	movf	??_PWM1_Init& (0+255),w,b
  1530  00050A  6ECB               	movwf	4043,c	;volatile
  1531                           
  1532                           ;pwm.c: 63: }
  1533  00050C  D01B               	goto	l1981
  1534  00050E                     l1977:
  1535                           
  1536                           ; BSR set to: 0
  1537                           ;pwm.c: 64: else
  1538                           ;pwm.c: 65: {
  1539                           ;pwm.c: 66: PR2=(temp+8)/16;
  1540  00050E  0E08               	movlw	8
  1541  000510  0100               	movlb	0	; () banked
  1542  000512  2574               	addwf	PWM1_Init@temp& (0+255),w,b
  1543  000514  0100               	movlb	0	; () banked
  1544  000516  6F70               	movwf	??_PWM1_Init& (0+255),b
  1545  000518  0E00               	movlw	0
  1546  00051A  0100               	movlb	0	; () banked
  1547  00051C  2175               	addwfc	(PWM1_Init@temp+1)& (0+255),w,b
  1548  00051E  0100               	movlb	0	; () banked
  1549  000520  6F71               	movwf	(??_PWM1_Init+1)& (0+255),b
  1550  000522  0E04               	movlw	4
  1551  000524  0100               	movlb	0	; () banked
  1552  000526  6F72               	movwf	(??_PWM1_Init+2)& (0+255),b
  1553  000528                     u1745:
  1554  000528  0100               	movlb	0	; () banked
  1555  00052A  90D8               	bcf	status,0,c
  1556  00052C  3371               	rrcf	(??_PWM1_Init+1)& (0+255),f,b
  1557  00052E  3370               	rrcf	??_PWM1_Init& (0+255),f,b
  1558  000530  0100               	movlb	0	; () banked
  1559  000532  2F72               	decfsz	(??_PWM1_Init+2)& (0+255),f,b
  1560  000534  D7F9               	goto	u1745
  1561  000536  0100               	movlb	0	; () banked
  1562  000538  5170               	movf	??_PWM1_Init& (0+255),w,b
  1563  00053A  6ECB               	movwf	4043,c	;volatile
  1564                           
  1565                           ; BSR set to: 0
  1566                           ;pwm.c: 67: T2CONbits.T2CKPS=2;
  1567  00053C  50CA               	movf	4042,w,c	;volatile
  1568  00053E  0BFC               	andlw	-4
  1569  000540  0902               	iorlw	2
  1570  000542  6ECA               	movwf	4042,c	;volatile
  1571  000544                     l1981:
  1572                           
  1573                           ; BSR set to: 0
  1574                           ;pwm.c: 68: }
  1575                           ;pwm.c: 71: T2CONbits.TOUTPS=0x00;
  1576  000544  96CA               	bcf	4042,3,c	;volatile
  1577  000546  98CA               	bcf	4042,4,c	;volatile
  1578  000548  9ACA               	bcf	4042,5,c	;volatile
  1579  00054A  9CCA               	bcf	4042,6,c	;volatile
  1580                           
  1581                           ; BSR set to: 0
  1582  00054C  0012               	return		;funcret
  1583  00054E                     __end_of_PWM1_Init:
  1584                           	opt stack 0
  1585                           tblptru	equ	0xFF8
  1586                           tblptrh	equ	0xFF7
  1587                           tblptrl	equ	0xFF6
  1588                           tablat	equ	0xFF5
  1589                           intcon	equ	0xFF2
  1590                           postinc0	equ	0xFEE
  1591                           wreg	equ	0xFE8
  1592                           status	equ	0xFD8
  1593                           
  1594 ;; *************** function ___aldiv *****************
  1595 ;; Defined at:
  1596 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\aldiv.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;  dividend        4    0[BANK0 ] long 
  1599 ;;  divisor         4    4[BANK0 ] long 
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;  quotient        4   10[BANK0 ] long 
  1602 ;;  sign            1    9[BANK0 ] unsigned char 
  1603 ;;  counter         1    8[BANK0 ] unsigned char 
  1604 ;; Return value:  Size  Location     Type
  1605 ;;                  4    0[BANK0 ] long 
  1606 ;; Registers used:
  1607 ;;		wreg, status,2, status,0
  1608 ;; Tracked objects:
  1609 ;;		On entry : 0/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1613 ;;      Params:         0       8       0       0       0       0       0       0       0
  1614 ;;      Locals:         0       6       0       0       0       0       0       0       0
  1615 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1616 ;;      Totals:         0      14       0       0       0       0       0       0       0
  1617 ;;Total ram usage:       14 bytes
  1618 ;; Hardware stack levels used:    1
  1619 ;; Hardware stack levels required when called:    3
  1620 ;; This function calls:
  1621 ;;		Nothing
  1622 ;; This function is called by:
  1623 ;;		_PWM1_Init
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           	psect	text9
  1628  00020E                     __ptext9:
  1629                           	opt stack 0
  1630  00020E                     ___aldiv:
  1631                           	opt stack 25
  1632                           
  1633                           ; BSR set to: 0
  1634                           ;incstack = 0
  1635  00020E  0E00               	movlw	0
  1636  000210  0100               	movlb	0	; () banked
  1637  000212  6F69               	movwf	___aldiv@sign& (0+255),b
  1638                           
  1639                           ; BSR set to: 0
  1640  000214  0100               	movlb	0	; () banked
  1641  000216  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  1642  000218  D00C               	goto	l1859
  1643                           
  1644                           ; BSR set to: 0
  1645  00021A  0100               	movlb	0	; () banked
  1646  00021C  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
  1647  00021E  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
  1648  000220  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
  1649  000222  6D64               	negf	___aldiv@divisor& (0+255),b
  1650  000224  0E00               	movlw	0
  1651  000226  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  1652  000228  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  1653  00022A  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  1654                           
  1655                           ; BSR set to: 0
  1656  00022C  0E01               	movlw	1
  1657  00022E  0100               	movlb	0	; () banked
  1658  000230  6F69               	movwf	___aldiv@sign& (0+255),b
  1659  000232                     l1859:
  1660                           
  1661                           ; BSR set to: 0
  1662  000232  0100               	movlb	0	; () banked
  1663  000234  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  1664  000236  D00C               	goto	l1865
  1665                           
  1666                           ; BSR set to: 0
  1667  000238  0100               	movlb	0	; () banked
  1668  00023A  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
  1669  00023C  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
  1670  00023E  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
  1671  000240  6D60               	negf	___aldiv@dividend& (0+255),b
  1672  000242  0E00               	movlw	0
  1673  000244  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  1674  000246  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  1675  000248  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  1676                           
  1677                           ; BSR set to: 0
  1678  00024A  0E01               	movlw	1
  1679  00024C  0100               	movlb	0	; () banked
  1680  00024E  1B69               	xorwf	___aldiv@sign& (0+255),f,b
  1681  000250                     l1865:
  1682                           
  1683                           ; BSR set to: 0
  1684  000250  0E00               	movlw	0
  1685  000252  0100               	movlb	0	; () banked
  1686  000254  6F6A               	movwf	___aldiv@quotient& (0+255),b
  1687  000256  0E00               	movlw	0
  1688  000258  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
  1689  00025A  0E00               	movlw	0
  1690  00025C  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
  1691  00025E  0E00               	movlw	0
  1692  000260  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
  1693                           
  1694                           ; BSR set to: 0
  1695  000262  0100               	movlb	0	; () banked
  1696  000264  5164               	movf	___aldiv@divisor& (0+255),w,b
  1697  000266  0100               	movlb	0	; () banked
  1698  000268  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  1699  00026A  0100               	movlb	0	; () banked
  1700  00026C  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  1701  00026E  0100               	movlb	0	; () banked
  1702  000270  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  1703  000272  B4D8               	btfsc	status,2,c
  1704  000274  D042               	goto	l1887
  1705                           
  1706                           ; BSR set to: 0
  1707  000276  0E01               	movlw	1
  1708  000278  0100               	movlb	0	; () banked
  1709  00027A  6F68               	movwf	___aldiv@counter& (0+255),b
  1710  00027C  D008               	goto	l1873
  1711  00027E                     l1871:
  1712                           
  1713                           ; BSR set to: 0
  1714  00027E  0100               	movlb	0	; () banked
  1715  000280  90D8               	bcf	status,0,c
  1716  000282  3764               	rlcf	___aldiv@divisor& (0+255),f,b
  1717  000284  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  1718  000286  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  1719  000288  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  1720  00028A  0100               	movlb	0	; () banked
  1721  00028C  2B68               	incf	___aldiv@counter& (0+255),f,b
  1722  00028E                     l1873:
  1723                           
  1724                           ; BSR set to: 0
  1725  00028E  0100               	movlb	0	; () banked
  1726  000290  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  1727  000292  D7F5               	goto	l1871
  1728  000294                     l1875:
  1729                           
  1730                           ; BSR set to: 0
  1731  000294  0100               	movlb	0	; () banked
  1732  000296  90D8               	bcf	status,0,c
  1733  000298  376A               	rlcf	___aldiv@quotient& (0+255),f,b
  1734  00029A  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  1735  00029C  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  1736  00029E  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  1737                           
  1738                           ; BSR set to: 0
  1739  0002A0  0100               	movlb	0	; () banked
  1740  0002A2  5164               	movf	___aldiv@divisor& (0+255),w,b
  1741  0002A4  0100               	movlb	0	; () banked
  1742  0002A6  5D60               	subwf	___aldiv@dividend& (0+255),w,b
  1743  0002A8  0100               	movlb	0	; () banked
  1744  0002AA  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
  1745  0002AC  0100               	movlb	0	; () banked
  1746  0002AE  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  1747  0002B0  0100               	movlb	0	; () banked
  1748  0002B2  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
  1749  0002B4  0100               	movlb	0	; () banked
  1750  0002B6  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  1751  0002B8  0100               	movlb	0	; () banked
  1752  0002BA  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
  1753  0002BC  0100               	movlb	0	; () banked
  1754  0002BE  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  1755  0002C0  A0D8               	btfss	status,0,c
  1756  0002C2  D012               	goto	l1883
  1757                           
  1758                           ; BSR set to: 0
  1759  0002C4  0100               	movlb	0	; () banked
  1760  0002C6  5164               	movf	___aldiv@divisor& (0+255),w,b
  1761  0002C8  0100               	movlb	0	; () banked
  1762  0002CA  5F60               	subwf	___aldiv@dividend& (0+255),f,b
  1763  0002CC  0100               	movlb	0	; () banked
  1764  0002CE  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
  1765  0002D0  0100               	movlb	0	; () banked
  1766  0002D2  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  1767  0002D4  0100               	movlb	0	; () banked
  1768  0002D6  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
  1769  0002D8  0100               	movlb	0	; () banked
  1770  0002DA  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  1771  0002DC  0100               	movlb	0	; () banked
  1772  0002DE  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
  1773  0002E0  0100               	movlb	0	; () banked
  1774  0002E2  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  1775                           
  1776                           ; BSR set to: 0
  1777  0002E4  0100               	movlb	0	; () banked
  1778  0002E6  816A               	bsf	___aldiv@quotient& (0+255),0,b
  1779  0002E8                     l1883:
  1780                           
  1781                           ; BSR set to: 0
  1782  0002E8  0100               	movlb	0	; () banked
  1783  0002EA  90D8               	bcf	status,0,c
  1784  0002EC  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  1785  0002EE  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  1786  0002F0  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  1787  0002F2  3364               	rrcf	___aldiv@divisor& (0+255),f,b
  1788                           
  1789                           ; BSR set to: 0
  1790  0002F4  0100               	movlb	0	; () banked
  1791  0002F6  2F68               	decfsz	___aldiv@counter& (0+255),f,b
  1792  0002F8  D7CD               	goto	l1875
  1793  0002FA                     l1887:
  1794                           
  1795                           ; BSR set to: 0
  1796  0002FA  0100               	movlb	0	; () banked
  1797  0002FC  5169               	movf	___aldiv@sign& (0+255),w,b
  1798  0002FE  0100               	movlb	0	; () banked
  1799  000300  B4D8               	btfsc	status,2,c
  1800  000302  D009               	goto	l1891
  1801                           
  1802                           ; BSR set to: 0
  1803  000304  0100               	movlb	0	; () banked
  1804  000306  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
  1805  000308  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
  1806  00030A  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
  1807  00030C  6D6A               	negf	___aldiv@quotient& (0+255),b
  1808  00030E  0E00               	movlw	0
  1809  000310  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  1810  000312  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  1811  000314  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  1812  000316                     l1891:
  1813                           
  1814                           ; BSR set to: 0
  1815  000316  C06A  F060         	movff	___aldiv@quotient,?___aldiv
  1816  00031A  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
  1817  00031E  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
  1818  000322  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
  1819  000326  0012               	return	
  1820  000328                     __end_of___aldiv:
  1821                           	opt stack 0
  1822                           tblptru	equ	0xFF8
  1823                           tblptrh	equ	0xFF7
  1824                           tblptrl	equ	0xFF6
  1825                           tablat	equ	0xFF5
  1826                           intcon	equ	0xFF2
  1827                           postinc0	equ	0xFEE
  1828                           wreg	equ	0xFE8
  1829                           status	equ	0xFD8
  1830                           
  1831 ;; *************** function _loop *****************
  1832 ;; Defined at:
  1833 ;;		line 159 in file "main.c"
  1834 ;; Parameters:    Size  Location     Type
  1835 ;;		None
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;		None
  1838 ;; Return value:  Size  Location     Type
  1839 ;;                  1    wreg      void 
  1840 ;; Registers used:
  1841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1842 ;; Tracked objects:
  1843 ;;		On entry : 0/0
  1844 ;;		On exit  : 0/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1847 ;;      Params:         0       0       0       0       0       0       0       0       0
  1848 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1849 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1850 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1851 ;;Total ram usage:        2 bytes
  1852 ;; Hardware stack levels used:    1
  1853 ;; Hardware stack levels required when called:    5
  1854 ;; This function calls:
  1855 ;;		_adc_amostra
  1856 ;;		_atraso_ms
  1857 ;;		_serial_rx_str_until
  1858 ;;		_serial_tx
  1859 ;; This function is called by:
  1860 ;;		_main
  1861 ;; This function uses a non-reentrant model
  1862 ;;
  1863                           
  1864                           	psect	text10
  1865  00054E                     __ptext10:
  1866                           	opt stack 0
  1867  00054E                     _loop:
  1868                           	opt stack 25
  1869                           
  1870                           ;main.c: 160: serial_rx_str_until(buffer,5,'f');
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;incstack = 0
  1874  00054E  0E7E               	movlw	low _buffer
  1875  000550  0100               	movlb	0	; () banked
  1876  000552  6F66               	movwf	serial_rx_str_until@buff& (0+255),b
  1877  000554  0E00               	movlw	high _buffer
  1878  000556  0100               	movlb	0	; () banked
  1879  000558  6F67               	movwf	(serial_rx_str_until@buff+1)& (0+255),b
  1880  00055A  0E00               	movlw	0
  1881  00055C  0100               	movlb	0	; () banked
  1882  00055E  6F69               	movwf	(serial_rx_str_until@size+1)& (0+255),b
  1883  000560  0E05               	movlw	5
  1884  000562  6F68               	movwf	serial_rx_str_until@size& (0+255),b
  1885  000564  0E66               	movlw	102
  1886  000566  0100               	movlb	0	; () banked
  1887  000568  6F6A               	movwf	serial_rx_str_until@term& (0+255),b
  1888  00056A  EC94  F001         	call	_serial_rx_str_until	;wreg free
  1889                           
  1890                           ;main.c: 161: if(buffer[0] == 'i'){
  1891  00056E  0E69               	movlw	105
  1892  000570  0100               	movlb	0	; () banked
  1893  000572  197E               	xorwf	_buffer& (0+255),w,b
  1894  000574  A4D8               	btfss	status,2,c
  1895  000576  D007               	goto	l2071
  1896                           
  1897                           ; BSR set to: 0
  1898                           ;main.c: 163: hora = buffer[1];
  1899  000578  C07F  F036         	movff	_buffer+1,_hora
  1900                           
  1901                           ;main.c: 164: minuto = buffer[2];
  1902  00057C  C080  F035         	movff	_buffer+2,_minuto
  1903                           
  1904                           ;main.c: 165: segundo = buffer[3];
  1905  000580  C081  F034         	movff	_buffer+3,_segundo
  1906                           
  1907                           ;main.c: 167: }else if(buffer[0] == 'r'){
  1908  000584  0012               	return	
  1909  000586                     l2071:
  1910                           
  1911                           ; BSR set to: 0
  1912  000586  0E72               	movlw	114
  1913  000588  0100               	movlb	0	; () banked
  1914  00058A  197E               	xorwf	_buffer& (0+255),w,b
  1915  00058C  A4D8               	btfss	status,2,c
  1916  00058E  D005               	goto	l2075
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;main.c: 169: hora_refeicao = buffer[1];
  1920  000590  C07F  F03B         	movff	_buffer+1,_hora_refeicao
  1921                           
  1922                           ;main.c: 170: minuto_refeicao = buffer[2];
  1923  000594  C080  F03A         	movff	_buffer+2,_minuto_refeicao
  1924                           
  1925                           ;main.c: 172: }else if(buffer[0] == 't'){
  1926  000598  0012               	return	
  1927  00059A                     l2075:
  1928                           
  1929                           ; BSR set to: 0
  1930  00059A  0E74               	movlw	116
  1931  00059C  0100               	movlb	0	; () banked
  1932  00059E  197E               	xorwf	_buffer& (0+255),w,b
  1933  0005A0  A4D8               	btfss	status,2,c
  1934  0005A2  D03D               	goto	l2091
  1935                           
  1936                           ; BSR set to: 0
  1937                           ;main.c: 175: temperatura = adc_amostra(2)/2;
  1938  0005A4  0E02               	movlw	2
  1939  0005A6  ECE5  F004         	call	_adc_amostra
  1940  0005AA  90D8               	bcf	status,0,c
  1941  0005AC  0100               	movlb	0	; () banked
  1942  0005AE  3161               	rrcf	(?_adc_amostra+1)& (0+255),w,b
  1943  0005B0  0100               	movlb	0	; () banked
  1944  0005B2  6F72               	movwf	??_loop& (0+255),b
  1945  0005B4  0100               	movlb	0	; () banked
  1946  0005B6  3160               	rrcf	?_adc_amostra& (0+255),w,b
  1947  0005B8  6E2F               	movwf	_temperatura,c
  1948  0005BA  C072  F030         	movff	??_loop,_temperatura+1
  1949                           
  1950                           ;main.c: 176: atraso_ms(20);
  1951  0005BE  0E00               	movlw	0
  1952  0005C0  0100               	movlb	0	; () banked
  1953  0005C2  6F61               	movwf	(atraso_ms@valor+1)& (0+255),b
  1954  0005C4  0E14               	movlw	20
  1955  0005C6  6F60               	movwf	atraso_ms@valor& (0+255),b
  1956  0005C8  EC77  F005         	call	_atraso_ms	;wreg free
  1957                           
  1958                           ;main.c: 177: serial_tx(temperatura_des);
  1959  0005CC  5039               	movf	_temperatura_des,w,c
  1960  0005CE  ECEC  F005         	call	_serial_tx
  1961                           
  1962                           ;main.c: 178: atraso_ms(100);
  1963  0005D2  0E00               	movlw	0
  1964  0005D4  0100               	movlb	0	; () banked
  1965  0005D6  6F61               	movwf	(atraso_ms@valor+1)& (0+255),b
  1966  0005D8  0E64               	movlw	100
  1967  0005DA  6F60               	movwf	atraso_ms@valor& (0+255),b
  1968  0005DC  EC77  F005         	call	_atraso_ms	;wreg free
  1969                           
  1970                           ;main.c: 179: serial_tx(hora_refeicao);
  1971  0005E0  503B               	movf	_hora_refeicao,w,c
  1972  0005E2  ECEC  F005         	call	_serial_tx
  1973                           
  1974                           ;main.c: 180: atraso_ms(100);
  1975  0005E6  0E00               	movlw	0
  1976  0005E8  0100               	movlb	0	; () banked
  1977  0005EA  6F61               	movwf	(atraso_ms@valor+1)& (0+255),b
  1978  0005EC  0E64               	movlw	100
  1979  0005EE  6F60               	movwf	atraso_ms@valor& (0+255),b
  1980  0005F0  EC77  F005         	call	_atraso_ms	;wreg free
  1981                           
  1982                           ;main.c: 181: serial_tx(minuto_refeicao);
  1983  0005F4  503A               	movf	_minuto_refeicao,w,c
  1984  0005F6  ECEC  F005         	call	_serial_tx
  1985                           
  1986                           ;main.c: 182: atraso_ms(100);
  1987  0005FA  0E00               	movlw	0
  1988  0005FC  0100               	movlb	0	; () banked
  1989  0005FE  6F61               	movwf	(atraso_ms@valor+1)& (0+255),b
  1990  000600  0E64               	movlw	100
  1991  000602  6F60               	movwf	atraso_ms@valor& (0+255),b
  1992  000604  EC77  F005         	call	_atraso_ms	;wreg free
  1993                           
  1994                           ;main.c: 183: serial_tx(temperatura);
  1995  000608  502F               	movf	_temperatura,w,c
  1996  00060A  ECEC  F005         	call	_serial_tx
  1997                           
  1998                           ;main.c: 184: atraso_ms(100);
  1999  00060E  0E00               	movlw	0
  2000  000610  0100               	movlb	0	; () banked
  2001  000612  6F61               	movwf	(atraso_ms@valor+1)& (0+255),b
  2002  000614  0E64               	movlw	100
  2003  000616  6F60               	movwf	atraso_ms@valor& (0+255),b
  2004  000618  EC77  F005         	call	_atraso_ms	;wreg free
  2005                           
  2006                           ;main.c: 185: }else if(buffer[0] == 'e'){
  2007  00061C  0012               	return	
  2008  00061E                     l2091:
  2009  00061E  0E65               	movlw	101
  2010  000620  0100               	movlb	0	; () banked
  2011  000622  197E               	xorwf	_buffer& (0+255),w,b
  2012  000624  A4D8               	btfss	status,2,c
  2013  000626  D003               	goto	l2095
  2014                           
  2015                           ; BSR set to: 0
  2016                           ;main.c: 186: temperatura_des = buffer[1];
  2017  000628  C07F  F039         	movff	_buffer+1,_temperatura_des
  2018                           
  2019                           ;main.c: 187: }else if(buffer[0] == 'v'){
  2020  00062C  0012               	return	
  2021  00062E                     l2095:
  2022                           
  2023                           ; BSR set to: 0
  2024  00062E  0E76               	movlw	118
  2025  000630  0100               	movlb	0	; () banked
  2026  000632  197E               	xorwf	_buffer& (0+255),w,b
  2027  000634  A4D8               	btfss	status,2,c
  2028  000636  D003               	goto	l2099
  2029                           
  2030                           ; BSR set to: 0
  2031                           ;main.c: 189: vent_on = buffer[1];
  2032  000638  C07F  F038         	movff	_buffer+1,_vent_on
  2033                           
  2034                           ;main.c: 190: }else if(buffer[0] == 'a'){
  2035  00063C  0012               	return	
  2036  00063E                     l2099:
  2037                           
  2038                           ; BSR set to: 0
  2039  00063E  0E61               	movlw	97
  2040  000640  0100               	movlb	0	; () banked
  2041  000642  197E               	xorwf	_buffer& (0+255),w,b
  2042  000644  A4D8               	btfss	status,2,c
  2043  000646  0012               	return	
  2044                           
  2045                           ; BSR set to: 0
  2046                           ;main.c: 191: aquec_on = buffer[1];
  2047  000648  C07F  F037         	movff	_buffer+1,_aquec_on
  2048                           
  2049                           ; BSR set to: 0
  2050                           
  2051                           ; BSR set to: 0
  2052                           
  2053                           ; BSR set to: 0
  2054                           
  2055                           ; BSR set to: 0
  2056                           
  2057                           ; BSR set to: 0
  2058  00064C  0012               	return	
  2059  00064E                     __end_of_loop:
  2060                           	opt stack 0
  2061                           tblptru	equ	0xFF8
  2062                           tblptrh	equ	0xFF7
  2063                           tblptrl	equ	0xFF6
  2064                           tablat	equ	0xFF5
  2065                           intcon	equ	0xFF2
  2066                           postinc0	equ	0xFEE
  2067                           wreg	equ	0xFE8
  2068                           status	equ	0xFD8
  2069                           
  2070 ;; *************** function _serial_tx *****************
  2071 ;; Defined at:
  2072 ;;		line 60 in file "serial.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;  val             1    wreg     unsigned char 
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;  val             1    0[BANK0 ] unsigned char 
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  1    wreg      void 
  2079 ;; Registers used:
  2080 ;;		wreg
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2086 ;;      Params:         0       0       0       0       0       0       0       0       0
  2087 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2088 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2089 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2090 ;;Total ram usage:        1 bytes
  2091 ;; Hardware stack levels used:    1
  2092 ;; Hardware stack levels required when called:    3
  2093 ;; This function calls:
  2094 ;;		Nothing
  2095 ;; This function is called by:
  2096 ;;		_loop
  2097 ;;		_serial_tx_str
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           	psect	text11
  2102  000BD8                     __ptext11:
  2103                           	opt stack 0
  2104  000BD8                     _serial_tx:
  2105                           	opt stack 26
  2106                           
  2107                           ;incstack = 0
  2108                           ;serial_tx@val stored from wreg
  2109  000BD8  0100               	movlb	0	; () banked
  2110  000BDA  6F60               	movwf	serial_tx@val& (0+255),b
  2111                           
  2112                           ;serial.c: 62: TXREG=val;
  2113  000BDC  C060  FFAD         	movff	serial_tx@val,4013	;volatile
  2114  000BE0                     l238:
  2115  000BE0  B2AC               	btfsc	4012,1,c	;volatile
  2116  000BE2  0012               	return	
  2117  000BE4  D7FD               	goto	l238
  2118  000BE6                     __end_of_serial_tx:
  2119                           	opt stack 0
  2120                           tblptru	equ	0xFF8
  2121                           tblptrh	equ	0xFF7
  2122                           tblptrl	equ	0xFF6
  2123                           tablat	equ	0xFF5
  2124                           intcon	equ	0xFF2
  2125                           postinc0	equ	0xFEE
  2126                           wreg	equ	0xFE8
  2127                           status	equ	0xFD8
  2128                           
  2129 ;; *************** function _serial_rx_str_until *****************
  2130 ;; Defined at:
  2131 ;;		line 136 in file "serial.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;  buff            2    6[BANK0 ] PTR unsigned char 
  2134 ;;		 -> buffer(5), 
  2135 ;;  size            2    8[BANK0 ] unsigned int 
  2136 ;;  term            1   10[BANK0 ] unsigned char 
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;  i               2   16[BANK0 ] unsigned int 
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  2    6[BANK0 ] PTR unsigned char 
  2141 ;; Registers used:
  2142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2148 ;;      Params:         0       5       0       0       0       0       0       0       0
  2149 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2150 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2151 ;;      Totals:         0      12       0       0       0       0       0       0       0
  2152 ;;Total ram usage:       12 bytes
  2153 ;; Hardware stack levels used:    1
  2154 ;; Hardware stack levels required when called:    4
  2155 ;; This function calls:
  2156 ;;		_atraso_ms
  2157 ;; This function is called by:
  2158 ;;		_loop
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           	psect	text12
  2163  000328                     __ptext12:
  2164                           	opt stack 0
  2165  000328                     _serial_rx_str_until:
  2166                           	opt stack 25
  2167                           
  2168                           ;serial.c: 139: unsigned int i;
  2169                           ;serial.c: 140: if(RCSTAbits.FERR || RCSTAbits.OERR)
  2170                           
  2171                           ;incstack = 0
  2172  000328  B4AB               	btfsc	4011,2,c	;volatile
  2173  00032A  D002               	goto	l289
  2174  00032C  A2AB               	btfss	4011,1,c	;volatile
  2175  00032E  D002               	goto	l1997
  2176  000330                     l289:
  2177                           
  2178                           ;serial.c: 141: {
  2179                           ;serial.c: 142: RCSTAbits.CREN=0;
  2180  000330  98AB               	bcf	4011,4,c	;volatile
  2181                           
  2182                           ;serial.c: 143: RCSTAbits.CREN=1;
  2183  000332  88AB               	bsf	4011,4,c	;volatile
  2184  000334                     l1997:
  2185                           
  2186                           ;serial.c: 144: }
  2187                           ;serial.c: 146: size--;
  2188  000334  0100               	movlb	0	; () banked
  2189  000336  0768               	decf	serial_rx_str_until@size& (0+255),f,b
  2190  000338  A0D8               	btfss	status,0,c
  2191  00033A  0769               	decf	(serial_rx_str_until@size+1)& (0+255),f,b
  2192                           
  2193                           ; BSR set to: 0
  2194                           ;serial.c: 147: i=0;
  2195  00033C  0E00               	movlw	0
  2196  00033E  0100               	movlb	0	; () banked
  2197  000340  6F71               	movwf	(serial_rx_str_until@i+1)& (0+255),b
  2198  000342  0E00               	movlw	0
  2199  000344  6F70               	movwf	serial_rx_str_until@i& (0+255),b
  2200                           
  2201                           ; BSR set to: 0
  2202                           ;serial.c: 149: {
  2203                           ;serial.c: 150: while(!PIR1bits.RCIF)
  2204                           
  2205                           ;serial.c: 148: do
  2206  000346  D007               	goto	l2003
  2207  000348                     l2001:
  2208                           
  2209                           ;serial.c: 151: {
  2210                           ;serial.c: 152: atraso_ms(1);
  2211  000348  0E00               	movlw	0
  2212  00034A  0100               	movlb	0	; () banked
  2213  00034C  6F61               	movwf	(atraso_ms@valor+1)& (0+255),b
  2214  00034E  0E01               	movlw	1
  2215  000350  6F60               	movwf	atraso_ms@valor& (0+255),b
  2216  000352  EC77  F005         	call	_atraso_ms	;wreg free
  2217  000356                     l2003:
  2218  000356  AA9E               	btfss	3998,5,c	;volatile
  2219  000358  D7F7               	goto	l2001
  2220  00035A                     l2005:
  2221                           
  2222                           ;serial.c: 155: {
  2223                           ;serial.c: 156: buff[i]= RCREG;
  2224  00035A  0100               	movlb	0	; () banked
  2225  00035C  5170               	movf	serial_rx_str_until@i& (0+255),w,b
  2226  00035E  0100               	movlb	0	; () banked
  2227  000360  2566               	addwf	serial_rx_str_until@buff& (0+255),w,b
  2228  000362  6ED9               	movwf	fsr2l,c
  2229  000364  0100               	movlb	0	; () banked
  2230  000366  5171               	movf	(serial_rx_str_until@i+1)& (0+255),w,b
  2231  000368  0100               	movlb	0	; () banked
  2232  00036A  2167               	addwfc	(serial_rx_str_until@buff+1)& (0+255),w,b
  2233  00036C  6EDA               	movwf	fsr2h,c
  2234  00036E  CFAE FFDF          	movff	4014,indf2	;volatile
  2235                           
  2236                           ; BSR set to: 0
  2237                           ;serial.c: 157: i++;
  2238  000372  0100               	movlb	0	; () banked
  2239  000374  4B70               	infsnz	serial_rx_str_until@i& (0+255),f,b
  2240  000376  2B71               	incf	(serial_rx_str_until@i+1)& (0+255),f,b
  2241                           
  2242                           ; BSR set to: 0
  2243                           ;serial.c: 158: }while((PIR1bits.RCIF)&&(i < size)&&(buff[i-1]!=term));
  2244  000378  AA9E               	btfss	3998,5,c	;volatile
  2245  00037A  D02B               	goto	l2015
  2246                           
  2247                           ; BSR set to: 0
  2248  00037C  0100               	movlb	0	; () banked
  2249  00037E  5168               	movf	serial_rx_str_until@size& (0+255),w,b
  2250  000380  0100               	movlb	0	; () banked
  2251  000382  5D70               	subwf	serial_rx_str_until@i& (0+255),w,b
  2252  000384  0100               	movlb	0	; () banked
  2253  000386  5169               	movf	(serial_rx_str_until@size+1)& (0+255),w,b
  2254  000388  0100               	movlb	0	; () banked
  2255  00038A  5971               	subwfb	(serial_rx_str_until@i+1)& (0+255),w,b
  2256  00038C  B0D8               	btfsc	status,0,c
  2257  00038E  D021               	goto	l2015
  2258                           
  2259                           ; BSR set to: 0
  2260  000390  0EFF               	movlw	255
  2261  000392  0100               	movlb	0	; () banked
  2262  000394  6F6B               	movwf	??_serial_rx_str_until& (0+255),b
  2263  000396  0EFF               	movlw	255
  2264  000398  0100               	movlb	0	; () banked
  2265  00039A  6F6C               	movwf	(??_serial_rx_str_until+1)& (0+255),b
  2266  00039C  C070  F06D         	movff	serial_rx_str_until@i,??_serial_rx_str_until+2
  2267  0003A0  C071  F06E         	movff	serial_rx_str_until@i+1,??_serial_rx_str_until+3
  2268  0003A4  0100               	movlb	0	; () banked
  2269  0003A6  516B               	movf	??_serial_rx_str_until& (0+255),w,b
  2270  0003A8  0100               	movlb	0	; () banked
  2271  0003AA  276D               	addwf	(??_serial_rx_str_until+2)& (0+255),f,b
  2272  0003AC  0100               	movlb	0	; () banked
  2273  0003AE  516C               	movf	(??_serial_rx_str_until+1)& (0+255),w,b
  2274  0003B0  0100               	movlb	0	; () banked
  2275  0003B2  236E               	addwfc	(??_serial_rx_str_until+3)& (0+255),f,b
  2276  0003B4  0100               	movlb	0	; () banked
  2277  0003B6  516D               	movf	(??_serial_rx_str_until+2)& (0+255),w,b
  2278  0003B8  0100               	movlb	0	; () banked
  2279  0003BA  2566               	addwf	serial_rx_str_until@buff& (0+255),w,b
  2280  0003BC  6ED9               	movwf	fsr2l,c
  2281  0003BE  0100               	movlb	0	; () banked
  2282  0003C0  516E               	movf	(??_serial_rx_str_until+3)& (0+255),w,b
  2283  0003C2  0100               	movlb	0	; () banked
  2284  0003C4  2167               	addwfc	(serial_rx_str_until@buff+1)& (0+255),w,b
  2285  0003C6  6EDA               	movwf	fsr2h,c
  2286  0003C8  0100               	movlb	0	; () banked
  2287  0003CA  516A               	movf	serial_rx_str_until@term& (0+255),w,b
  2288  0003CC  18DE               	xorwf	postinc2,w,c
  2289  0003CE  A4D8               	btfss	status,2,c
  2290  0003D0  D7C4               	goto	l2005
  2291  0003D2                     l2015:
  2292                           
  2293                           ; BSR set to: 0
  2294                           ;serial.c: 160: }while((i < size)&&(buff[i-1]!=term));
  2295  0003D2  0100               	movlb	0	; () banked
  2296  0003D4  5168               	movf	serial_rx_str_until@size& (0+255),w,b
  2297  0003D6  0100               	movlb	0	; () banked
  2298  0003D8  5D70               	subwf	serial_rx_str_until@i& (0+255),w,b
  2299  0003DA  0100               	movlb	0	; () banked
  2300  0003DC  5169               	movf	(serial_rx_str_until@size+1)& (0+255),w,b
  2301  0003DE  0100               	movlb	0	; () banked
  2302  0003E0  5971               	subwfb	(serial_rx_str_until@i+1)& (0+255),w,b
  2303  0003E2  B0D8               	btfsc	status,0,c
  2304  0003E4  D021               	goto	l2019
  2305                           
  2306                           ; BSR set to: 0
  2307  0003E6  0EFF               	movlw	255
  2308  0003E8  0100               	movlb	0	; () banked
  2309  0003EA  6F6B               	movwf	??_serial_rx_str_until& (0+255),b
  2310  0003EC  0EFF               	movlw	255
  2311  0003EE  0100               	movlb	0	; () banked
  2312  0003F0  6F6C               	movwf	(??_serial_rx_str_until+1)& (0+255),b
  2313  0003F2  C070  F06D         	movff	serial_rx_str_until@i,??_serial_rx_str_until+2
  2314  0003F6  C071  F06E         	movff	serial_rx_str_until@i+1,??_serial_rx_str_until+3
  2315  0003FA  0100               	movlb	0	; () banked
  2316  0003FC  516B               	movf	??_serial_rx_str_until& (0+255),w,b
  2317  0003FE  0100               	movlb	0	; () banked
  2318  000400  276D               	addwf	(??_serial_rx_str_until+2)& (0+255),f,b
  2319  000402  0100               	movlb	0	; () banked
  2320  000404  516C               	movf	(??_serial_rx_str_until+1)& (0+255),w,b
  2321  000406  0100               	movlb	0	; () banked
  2322  000408  236E               	addwfc	(??_serial_rx_str_until+3)& (0+255),f,b
  2323  00040A  0100               	movlb	0	; () banked
  2324  00040C  516D               	movf	(??_serial_rx_str_until+2)& (0+255),w,b
  2325  00040E  0100               	movlb	0	; () banked
  2326  000410  2566               	addwf	serial_rx_str_until@buff& (0+255),w,b
  2327  000412  6ED9               	movwf	fsr2l,c
  2328  000414  0100               	movlb	0	; () banked
  2329  000416  516E               	movf	(??_serial_rx_str_until+3)& (0+255),w,b
  2330  000418  0100               	movlb	0	; () banked
  2331  00041A  2167               	addwfc	(serial_rx_str_until@buff+1)& (0+255),w,b
  2332  00041C  6EDA               	movwf	fsr2h,c
  2333  00041E  0100               	movlb	0	; () banked
  2334  000420  516A               	movf	serial_rx_str_until@term& (0+255),w,b
  2335  000422  18DE               	xorwf	postinc2,w,c
  2336  000424  A4D8               	btfss	status,2,c
  2337  000426  D797               	goto	l2003
  2338  000428                     l2019:
  2339                           
  2340                           ; BSR set to: 0
  2341                           ;serial.c: 163: buff[i]= 0;
  2342  000428  0100               	movlb	0	; () banked
  2343  00042A  5170               	movf	serial_rx_str_until@i& (0+255),w,b
  2344  00042C  0100               	movlb	0	; () banked
  2345  00042E  2566               	addwf	serial_rx_str_until@buff& (0+255),w,b
  2346  000430  6ED9               	movwf	fsr2l,c
  2347  000432  0100               	movlb	0	; () banked
  2348  000434  5171               	movf	(serial_rx_str_until@i+1)& (0+255),w,b
  2349  000436  0100               	movlb	0	; () banked
  2350  000438  2167               	addwfc	(serial_rx_str_until@buff+1)& (0+255),w,b
  2351  00043A  6EDA               	movwf	fsr2h,c
  2352  00043C  0E00               	movlw	0
  2353  00043E  6EDF               	movwf	indf2,c
  2354  000440  0012               	return	
  2355  000442                     __end_of_serial_rx_str_until:
  2356                           	opt stack 0
  2357                           tblptru	equ	0xFF8
  2358                           tblptrh	equ	0xFF7
  2359                           tblptrl	equ	0xFF6
  2360                           tablat	equ	0xFF5
  2361                           intcon	equ	0xFF2
  2362                           postinc0	equ	0xFEE
  2363                           wreg	equ	0xFE8
  2364                           indf2	equ	0xFDF
  2365                           postinc2	equ	0xFDE
  2366                           fsr2h	equ	0xFDA
  2367                           fsr2l	equ	0xFD9
  2368                           status	equ	0xFD8
  2369                           
  2370 ;; *************** function _atraso_ms *****************
  2371 ;; Defined at:
  2372 ;;		line 29 in file "atraso.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;  valor           2    0[BANK0 ] unsigned int 
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;  i               2    2[BANK0 ] unsigned int 
  2377 ;;  j2              1    5[BANK0 ] volatile unsigned char 
  2378 ;;  j1              1    4[BANK0 ] volatile unsigned char 
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  1    wreg      void 
  2381 ;; Registers used:
  2382 ;;		wreg, status,2, status,0
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2388 ;;      Params:         0       2       0       0       0       0       0       0       0
  2389 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2390 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2391 ;;      Totals:         0       6       0       0       0       0       0       0       0
  2392 ;;Total ram usage:        6 bytes
  2393 ;; Hardware stack levels used:    1
  2394 ;; Hardware stack levels required when called:    3
  2395 ;; This function calls:
  2396 ;;		Nothing
  2397 ;; This function is called by:
  2398 ;;		_loop
  2399 ;;		_serial_rx_str_until
  2400 ;;		_serial_rx
  2401 ;;		_serial_rx_str
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405                           	psect	text13
  2406  000AEE                     __ptext13:
  2407                           	opt stack 0
  2408  000AEE                     _atraso_ms:
  2409                           	opt stack 25
  2410                           
  2411                           ;atraso.c: 31: unsigned int i;
  2412                           ;atraso.c: 32: volatile unsigned char j1;
  2413                           ;atraso.c: 33: volatile unsigned char j2=0;
  2414                           
  2415                           ; BSR set to: 0
  2416                           ;incstack = 0
  2417  000AEE  0E00               	movlw	0
  2418  000AF0  0100               	movlb	0	; () banked
  2419  000AF2  6F65               	movwf	atraso_ms@j2& (0+255),b	;volatile
  2420                           
  2421                           ;atraso.c: 35: for (i =0; i< valor; i++)
  2422  000AF4  0E00               	movlw	0
  2423  000AF6  0100               	movlb	0	; () banked
  2424  000AF8  6F63               	movwf	(atraso_ms@i+1)& (0+255),b
  2425  000AFA  0E00               	movlw	0
  2426  000AFC  6F62               	movwf	atraso_ms@i& (0+255),b
  2427  000AFE  D012               	goto	l1839
  2428  000B00                     l1835:
  2429                           
  2430                           ; BSR set to: 0
  2431                           ;atraso.c: 36: {
  2432                           ;atraso.c: 37: j1=(8000000/(4000l*50));
  2433  000B00  0E28               	movlw	40
  2434  000B02  0100               	movlb	0	; () banked
  2435  000B04  6F64               	movwf	atraso_ms@j1& (0+255),b	;volatile
  2436  000B06                     l1:
  2437  000B06  0E09               	movlw	9	; 20 j1 ;# 
  2438  000B08  6F65               	movwf	atraso_ms@j2,b	; 20 j1 ;# 
  2439  000B0A  F000               	nop		; 180 j2j1 ;# 
  2440  000B0C  F000               	nop		; 180 j2j1 ;# 
  2441  000B0E  2F65               	decfsz	atraso_ms@j2,f,b	; 160 j2j1 -j1 ;# 
  2442                           
  2443                           ; 40 2j1 ;# 
  2444  000B10  EF86  F005         	goto	($+-3)	; 320 2j2j1 -2j1 ;# 
  2445  000B14  F000               	nop		; 20 j1 ;# 
  2446  000B16  2F64               	decfsz	atraso_ms@j1,f,b	; 19 j1 -1 ;# 
  2447                           
  2448                           ; 2 2 ;# 
  2449  000B18  EF83  F005         	goto	l1	; 38 2j1 -2 ;# 
  2450  000B1C  F000               	nop		; 1 1 ;# 
  2451  000B1E  0100               	movlb	0	; () banked
  2452  000B20  4B62               	infsnz	atraso_ms@i& (0+255),f,b
  2453  000B22  2B63               	incf	(atraso_ms@i+1)& (0+255),f,b
  2454  000B24                     l1839:
  2455                           
  2456                           ; BSR set to: 0
  2457  000B24  0100               	movlb	0	; () banked
  2458  000B26  5160               	movf	atraso_ms@valor& (0+255),w,b
  2459  000B28  0100               	movlb	0	; () banked
  2460  000B2A  5D62               	subwf	atraso_ms@i& (0+255),w,b
  2461  000B2C  0100               	movlb	0	; () banked
  2462  000B2E  5161               	movf	(atraso_ms@valor+1)& (0+255),w,b
  2463  000B30  0100               	movlb	0	; () banked
  2464  000B32  5963               	subwfb	(atraso_ms@i+1)& (0+255),w,b
  2465  000B34  B0D8               	btfsc	status,0,c
  2466  000B36  0012               	return	
  2467  000B38  D7E3               	goto	l1835
  2468  000B3A                     __end_of_atraso_ms:
  2469                           	opt stack 0
  2470                           tblptru	equ	0xFF8
  2471                           tblptrh	equ	0xFF7
  2472                           tblptrl	equ	0xFF6
  2473                           tablat	equ	0xFF5
  2474                           intcon	equ	0xFF2
  2475                           postinc0	equ	0xFEE
  2476                           wreg	equ	0xFE8
  2477                           indf2	equ	0xFDF
  2478                           postinc2	equ	0xFDE
  2479                           fsr2h	equ	0xFDA
  2480                           fsr2l	equ	0xFD9
  2481                           status	equ	0xFD8
  2482                           
  2483 ;; *************** function _adc_amostra *****************
  2484 ;; Defined at:
  2485 ;;		line 44 in file "adc.c"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;  canal           1    wreg     unsigned char 
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;  canal           1    6[BANK0 ] unsigned char 
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  2    0[BANK0 ] unsigned int 
  2492 ;; Registers used:
  2493 ;;		wreg, status,2, status,0
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2499 ;;      Params:         0       2       0       0       0       0       0       0       0
  2500 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2501 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2502 ;;      Totals:         0       7       0       0       0       0       0       0       0
  2503 ;;Total ram usage:        7 bytes
  2504 ;; Hardware stack levels used:    1
  2505 ;; Hardware stack levels required when called:    3
  2506 ;; This function calls:
  2507 ;;		Nothing
  2508 ;; This function is called by:
  2509 ;;		_loop
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           
  2513                           	psect	text14
  2514  0009CA                     __ptext14:
  2515                           	opt stack 0
  2516  0009CA                     _adc_amostra:
  2517                           	opt stack 26
  2518                           
  2519                           ; BSR set to: 0
  2520                           ;incstack = 0
  2521                           ;adc_amostra@canal stored from wreg
  2522  0009CA  0100               	movlb	0	; () banked
  2523  0009CC  6F66               	movwf	adc_amostra@canal& (0+255),b
  2524                           
  2525                           ;adc.c: 49: switch(canal)
  2526  0009CE  D007               	goto	l1927
  2527  0009D0                     l1919:
  2528                           
  2529                           ;adc.c: 52: ADCON0=0x01;
  2530  0009D0  0E01               	movlw	1
  2531  0009D2  D003               	goto	L2
  2532  0009D4                     l1921:
  2533                           
  2534                           ;adc.c: 55: ADCON0=0x05;
  2535  0009D4  0E05               	movlw	5
  2536  0009D6  D001               	goto	L2
  2537  0009D8                     l1923:
  2538                           
  2539                           ;adc.c: 58: ADCON0=0x09;
  2540  0009D8  0E09               	movlw	9
  2541  0009DA                     L2:
  2542  0009DA  6EC2               	movwf	4034,c	;volatile
  2543                           
  2544                           ;adc.c: 60: }
  2545                           
  2546                           ;adc.c: 59: break;
  2547  0009DC  D00B               	goto	l176
  2548  0009DE                     l1927:
  2549  0009DE  0100               	movlb	0	; () banked
  2550  0009E0  5166               	movf	adc_amostra@canal& (0+255),w,b
  2551                           
  2552                           ; Switch size 1, requested type "space"
  2553                           ; Number of cases is 3, Range of values is 0 to 2
  2554                           ; switch strategies available:
  2555                           ; Name         Instructions Cycles
  2556                           ; simple_byte           10     6 (average)
  2557                           ;	Chosen strategy is simple_byte
  2558  0009E2  0A00               	xorlw	0	; case 0
  2559  0009E4  B4D8               	btfsc	status,2,c
  2560  0009E6  D7F4               	goto	l1919
  2561  0009E8  0A01               	xorlw	1	; case 1
  2562  0009EA  B4D8               	btfsc	status,2,c
  2563  0009EC  D7F3               	goto	l1921
  2564  0009EE  0A03               	xorlw	3	; case 2
  2565  0009F0  B4D8               	btfsc	status,2,c
  2566  0009F2  D7F2               	goto	l1923
  2567  0009F4                     l176:
  2568                           
  2569                           ;adc.c: 77: ADCON0bits.GO=1;
  2570  0009F4  82C2               	bsf	4034,1,c	;volatile
  2571  0009F6                     l179:
  2572  0009F6  B2C2               	btfsc	4034,1,c	;volatile
  2573  0009F8  D7FE               	goto	l179
  2574                           
  2575                           ;adc.c: 80: return ((((unsigned int)ADRESH)<<2)|(ADRESL>>6));
  2576  0009FA  CFC3 F062          	movff	4035,??_adc_amostra	;volatile
  2577  0009FE  0E06               	movlw	6
  2578  000A00  0100               	movlb	0	; () banked
  2579  000A02  6F63               	movwf	(??_adc_amostra+1)& (0+255),b
  2580  000A04                     u1705:
  2581  000A04  0100               	movlb	0	; () banked
  2582  000A06  90D8               	bcf	status,0,c
  2583  000A08  3362               	rrcf	??_adc_amostra& (0+255),f,b
  2584  000A0A  0100               	movlb	0	; () banked
  2585  000A0C  2F63               	decfsz	(??_adc_amostra+1)& (0+255),f,b
  2586  000A0E  D7FA               	goto	u1705
  2587  000A10  0100               	movlb	0	; () banked
  2588  000A12  5162               	movf	??_adc_amostra& (0+255),w,b
  2589  000A14  CFC4 F064          	movff	4036,??_adc_amostra+2	;volatile
  2590  000A18  0100               	movlb	0	; () banked
  2591  000A1A  6B65               	clrf	(??_adc_amostra+3)& (0+255),b
  2592  000A1C  0100               	movlb	0	; () banked
  2593  000A1E  90D8               	bcf	status,0,c
  2594  000A20  3764               	rlcf	(??_adc_amostra+2)& (0+255),f,b
  2595  000A22  3765               	rlcf	(??_adc_amostra+3)& (0+255),f,b
  2596  000A24  0100               	movlb	0	; () banked
  2597  000A26  90D8               	bcf	status,0,c
  2598  000A28  3764               	rlcf	(??_adc_amostra+2)& (0+255),f,b
  2599  000A2A  3765               	rlcf	(??_adc_amostra+3)& (0+255),f,b
  2600  000A2C  0100               	movlb	0	; () banked
  2601  000A2E  1164               	iorwf	(??_adc_amostra+2)& (0+255),w,b
  2602  000A30  0100               	movlb	0	; () banked
  2603  000A32  6F60               	movwf	?_adc_amostra& (0+255),b
  2604  000A34  0100               	movlb	0	; () banked
  2605  000A36  5165               	movf	(??_adc_amostra+3)& (0+255),w,b
  2606  000A38  0100               	movlb	0	; () banked
  2607  000A3A  6F61               	movwf	(?_adc_amostra+1)& (0+255),b
  2608  000A3C  0012               	return	
  2609  000A3E                     __end_of_adc_amostra:
  2610                           	opt stack 0
  2611                           tblptru	equ	0xFF8
  2612                           tblptrh	equ	0xFF7
  2613                           tblptrl	equ	0xFF6
  2614                           tablat	equ	0xFF5
  2615                           intcon	equ	0xFF2
  2616                           postinc0	equ	0xFEE
  2617                           wreg	equ	0xFE8
  2618                           indf2	equ	0xFDF
  2619                           postinc2	equ	0xFDE
  2620                           fsr2h	equ	0xFDA
  2621                           fsr2l	equ	0xFD9
  2622                           status	equ	0xFD8
  2623                           
  2624 ;; *************** function _itrp *****************
  2625 ;; Defined at:
  2626 ;;		line 25 in file "main.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;		None
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;		None
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  1    wreg      void 
  2633 ;; Registers used:
  2634 ;;		wreg, status,2, status,0, cstack
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2640 ;;      Params:         0       0       0       0       0       0       0       0       0
  2641 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2642 ;;      Temps:         16       0       0       0       0       0       0       0       0
  2643 ;;      Totals:        16       0       0       0       0       0       0       0       0
  2644 ;;Total ram usage:       16 bytes
  2645 ;; Hardware stack levels used:    1
  2646 ;; Hardware stack levels required when called:    2
  2647 ;; This function calls:
  2648 ;;		i2_PWM1_Set_Duty
  2649 ;;		i2_adc_amostra
  2650 ;; This function is called by:
  2651 ;;		Interrupt level 2
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           	psect	intcode
  2656  000008                     __pintcode:
  2657                           	opt stack 0
  2658  000008                     _itrp:
  2659                           	opt stack 25
  2660                           
  2661                           ; BSR set to: 0
  2662                           ;incstack = 0
  2663  000008  823C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2664  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
  2665                           tblptru	equ	0xFF8
  2666                           tblptrh	equ	0xFF7
  2667                           tblptrl	equ	0xFF6
  2668                           tablat	equ	0xFF5
  2669                           intcon	equ	0xFF2
  2670                           postinc0	equ	0xFEE
  2671                           wreg	equ	0xFE8
  2672                           indf2	equ	0xFDF
  2673                           postinc2	equ	0xFDE
  2674                           fsr2h	equ	0xFDA
  2675                           fsr2l	equ	0xFD9
  2676                           status	equ	0xFD8
  2677                           
  2678                           	psect	intcode_body
  2679  000012                     __pintcode_body:
  2680                           	opt stack 25
  2681  000012                     int_func:
  2682                           	opt stack 25
  2683  000012  0006               	pop		; remove dummy address from shadow register refresh
  2684  000014  CFFA F021          	movff	pclath,??_itrp+2
  2685  000018  CFFB F022          	movff	pclatu,??_itrp+3
  2686  00001C  CFE9 F023          	movff	fsr0l,??_itrp+4
  2687  000020  CFEA F024          	movff	fsr0h,??_itrp+5
  2688  000024  CFE1 F025          	movff	fsr1l,??_itrp+6
  2689  000028  CFE2 F026          	movff	fsr1h,??_itrp+7
  2690  00002C  CFD9 F027          	movff	fsr2l,??_itrp+8
  2691  000030  CFDA F028          	movff	fsr2h,??_itrp+9
  2692  000034  CFF3 F029          	movff	prodl,??_itrp+10
  2693  000038  CFF4 F02A          	movff	prodh,??_itrp+11
  2694  00003C  CFF6 F02B          	movff	tblptrl,??_itrp+12
  2695  000040  CFF7 F02C          	movff	tblptrh,??_itrp+13
  2696  000044  CFF8 F02D          	movff	tblptru,??_itrp+14
  2697  000048  CFF5 F02E          	movff	tablat,??_itrp+15
  2698                           
  2699                           ;main.c: 26: if(INTCONbits.T0IF == 1){
  2700  00004C  A4F2               	btfss	intcon,2,c	;volatile
  2701  00004E  D027               	goto	i2l1725
  2702                           
  2703                           ;main.c: 27: INTCONbits.T0IF = 0;
  2704  000050  94F2               	bcf	intcon,2,c	;volatile
  2705                           
  2706                           ;main.c: 28: TMR0L = 0xEE;
  2707  000052  0EEE               	movlw	238
  2708  000054  6ED6               	movwf	4054,c	;volatile
  2709                           
  2710                           ;main.c: 29: TMR0H= 0x85;
  2711  000056  0E85               	movlw	133
  2712  000058  6ED7               	movwf	4055,c	;volatile
  2713                           
  2714                           ;main.c: 30: segundo++;
  2715  00005A  2A34               	incf	_segundo,f,c
  2716                           
  2717                           ;main.c: 31: if(segundo==60){
  2718  00005C  0E3C               	movlw	60
  2719  00005E  1834               	xorwf	_segundo,w,c
  2720  000060  A4D8               	btfss	status,2,c
  2721  000062  D003               	goto	i2l1707
  2722                           
  2723                           ;main.c: 32: minuto++;
  2724  000064  2A35               	incf	_minuto,f,c
  2725                           
  2726                           ;main.c: 33: segundo=0;
  2727  000066  0E00               	movlw	0
  2728  000068  6E34               	movwf	_segundo,c
  2729  00006A                     i2l1707:
  2730                           
  2731                           ;main.c: 34: }
  2732                           ;main.c: 35: if(minuto==60){
  2733  00006A  0E3C               	movlw	60
  2734  00006C  1835               	xorwf	_minuto,w,c
  2735  00006E  A4D8               	btfss	status,2,c
  2736  000070  D003               	goto	i2l1713
  2737                           
  2738                           ;main.c: 36: hora++;
  2739  000072  2A36               	incf	_hora,f,c
  2740                           
  2741                           ;main.c: 37: minuto=0;
  2742  000074  0E00               	movlw	0
  2743  000076  6E35               	movwf	_minuto,c
  2744  000078                     i2l1713:
  2745                           
  2746                           ;main.c: 38: }
  2747                           ;main.c: 39: if(hora==24){
  2748  000078  0E18               	movlw	24
  2749  00007A  1836               	xorwf	_hora,w,c
  2750  00007C  A4D8               	btfss	status,2,c
  2751  00007E  D002               	goto	i2l1717
  2752                           
  2753                           ;main.c: 40: hora=0;
  2754  000080  0E00               	movlw	0
  2755  000082  6E36               	movwf	_hora,c
  2756  000084                     i2l1717:
  2757                           
  2758                           ;main.c: 41: }
  2759                           ;main.c: 43: if(hora_refeicao==hora && minuto_refeicao == minuto && segundo == 0){
  2760  000084  5036               	movf	_hora,w,c
  2761  000086  183B               	xorwf	_hora_refeicao,w,c
  2762  000088  A4D8               	btfss	status,2,c
  2763  00008A  D009               	goto	i2l1725
  2764  00008C  5035               	movf	_minuto,w,c
  2765  00008E  183A               	xorwf	_minuto_refeicao,w,c
  2766  000090  A4D8               	btfss	status,2,c
  2767  000092  D005               	goto	i2l1725
  2768  000094  5034               	movf	_segundo,w,c
  2769  000096  A4D8               	btfss	status,2,c
  2770  000098  D002               	goto	i2l1725
  2771                           
  2772                           ;main.c: 45: gira_servo = 1;
  2773  00009A  0E01               	movlw	1
  2774  00009C  6E33               	movwf	_gira_servo,c
  2775  00009E                     i2l1725:
  2776                           
  2777                           ;main.c: 47: }
  2778                           ;main.c: 49: }
  2779                           ;main.c: 51: if(PIR2bits.CCP2IF == 1){
  2780  00009E  A0A1               	btfss	4001,0,c	;volatile
  2781  0000A0  D042               	goto	i2l1749
  2782                           
  2783                           ;main.c: 52: PIR2bits.CCP2IF = 0;
  2784  0000A2  90A1               	bcf	4001,0,c	;volatile
  2785                           
  2786                           ;main.c: 53: PORTCbits.RC1 = ~PORTCbits.RC1;
  2787  0000A4  A282               	btfss	3970,1,c	;volatile
  2788  0000A6  D002               	goto	i2u128_40
  2789  0000A8  0E01               	movlw	1
  2790  0000AA  D001               	goto	i2u128_46
  2791  0000AC                     i2u128_40:
  2792  0000AC  0E00               	movlw	0
  2793  0000AE                     i2u128_46:
  2794  0000AE  0AFF               	xorlw	255
  2795  0000B0  6E1F               	movwf	??_itrp& (0+255),c
  2796  0000B2  461F               	rlncf	??_itrp,f,c
  2797  0000B4  5082               	movf	3970,w,c	;volatile
  2798  0000B6  181F               	xorwf	??_itrp,w,c
  2799  0000B8  0BFD               	andlw	-3
  2800  0000BA  181F               	xorwf	??_itrp,w,c
  2801  0000BC  6E82               	movwf	3970,c	;volatile
  2802                           
  2803                           ;main.c: 54: if(gira_servo == 1){
  2804  0000BE  0433               	decf	_gira_servo,w,c
  2805  0000C0  A4D8               	btfss	status,2,c
  2806  0000C2  D031               	goto	i2l1749
  2807                           
  2808                           ;main.c: 56: temp ++;
  2809  0000C4  4A31               	infsnz	_temp,f,c
  2810  0000C6  2A32               	incf	_temp+1,f,c
  2811                           
  2812                           ;main.c: 57: if(temp == 1){
  2813  0000C8  0431               	decf	_temp,w,c
  2814  0000CA  1032               	iorwf	_temp+1,w,c
  2815  0000CC  A4D8               	btfss	status,2,c
  2816  0000CE  D004               	goto	i2l1737
  2817                           
  2818                           ;main.c: 58: CCPR2L = 0x9A;
  2819  0000D0  0E9A               	movlw	154
  2820  0000D2  6EBB               	movwf	4027,c	;volatile
  2821                           
  2822                           ;main.c: 59: CCPR2H = 0x02;
  2823  0000D4  0E02               	movlw	2
  2824  0000D6  D009               	goto	L3
  2825  0000D8                     i2l1737:
  2826                           
  2827                           ;main.c: 61: else if(temp == 1000){
  2828  0000D8  0EE8               	movlw	232
  2829  0000DA  1831               	xorwf	_temp,w,c
  2830  0000DC  E108               	bnz	i2l1741
  2831  0000DE  0E03               	movlw	3
  2832  0000E0  1832               	xorwf	_temp+1,w,c
  2833  0000E2  A4D8               	btfss	status,2,c
  2834  0000E4  D004               	goto	i2l1741
  2835                           
  2836                           ;main.c: 62: CCPR2L = 0x40;
  2837  0000E6  0E40               	movlw	64
  2838  0000E8  D00A               	goto	L4
  2839  0000EA                     L3:
  2840  0000EA  6EBC               	movwf	4028,c	;volatile
  2841                           
  2842                           ;main.c: 64: }
  2843  0000EC  D01C               	goto	i2l1749
  2844  0000EE                     i2l1741:
  2845                           
  2846                           ;main.c: 65: else if(temp == 2000){
  2847  0000EE  0ED0               	movlw	208
  2848  0000F0  1831               	xorwf	_temp,w,c
  2849  0000F2  E108               	bnz	i2l1745
  2850  0000F4  0E07               	movlw	7
  2851  0000F6  1832               	xorwf	_temp+1,w,c
  2852  0000F8  A4D8               	btfss	status,2,c
  2853  0000FA  D004               	goto	i2l1745
  2854                           
  2855                           ;main.c: 66: CCPR2L = 0xE8;
  2856  0000FC  0EE8               	movlw	232
  2857  0000FE                     L4:
  2858  0000FE  6EBB               	movwf	4027,c	;volatile
  2859                           
  2860                           ;main.c: 67: CCPR2H = 0x03;
  2861  000100  0E03               	movlw	3
  2862  000102  D7F3               	goto	L3
  2863  000104                     i2l1745:
  2864  000104  0EC4               	movlw	196
  2865  000106  1831               	xorwf	_temp,w,c
  2866  000108  E10E               	bnz	i2l1749
  2867  00010A  0E09               	movlw	9
  2868  00010C  1832               	xorwf	_temp+1,w,c
  2869  00010E  A4D8               	btfss	status,2,c
  2870  000110  D00A               	goto	i2l1749
  2871                           
  2872                           ;main.c: 69: temp = 0;
  2873  000112  0E00               	movlw	0
  2874  000114  6E32               	movwf	_temp+1,c
  2875  000116  0E00               	movlw	0
  2876  000118  6E31               	movwf	_temp,c
  2877                           
  2878                           ;main.c: 70: gira_servo = 0;
  2879  00011A  0E00               	movlw	0
  2880  00011C  6E33               	movwf	_gira_servo,c
  2881                           
  2882                           ;main.c: 71: CCPR2L = 0xF4;
  2883  00011E  0EF4               	movlw	244
  2884  000120  6EBB               	movwf	4027,c	;volatile
  2885                           
  2886                           ;main.c: 72: CCPR2H = 0x01;
  2887  000122  0E01               	movlw	1
  2888  000124  D7E2               	goto	L3
  2889  000126                     i2l1749:
  2890                           
  2891                           ;main.c: 73: }
  2892                           ;main.c: 74: }
  2893                           ;main.c: 76: }
  2894                           ;main.c: 78: if(PIR1bits.TMR1IF == 1){
  2895  000126  A09E               	btfss	3998,0,c	;volatile
  2896  000128  D054               	goto	i2l131
  2897                           
  2898                           ;main.c: 79: PIR1bits.TMR1IF = 0;
  2899  00012A  909E               	bcf	3998,0,c	;volatile
  2900                           
  2901                           ;main.c: 80: temperatura = adc_amostra(2)/2;
  2902  00012C  0E02               	movlw	2
  2903  00012E  EC1F  F005         	call	i2_adc_amostra
  2904  000132  90D8               	bcf	status,0,c
  2905  000134  3002               	rrcf	?i2_adc_amostra+1,w,c
  2906  000136  6E1F               	movwf	??_itrp& (0+255),c
  2907  000138  3001               	rrcf	?i2_adc_amostra,w,c
  2908  00013A  6E2F               	movwf	_temperatura,c
  2909  00013C  C01F  F030         	movff	??_itrp,_temperatura+1
  2910                           
  2911                           ;main.c: 81: if(aquec_on == 1){
  2912  000140  0437               	decf	_aquec_on,w,c
  2913  000142  A4D8               	btfss	status,2,c
  2914  000144  D008               	goto	i2l120
  2915                           
  2916                           ;main.c: 82: if(temperatura < temperatura_des){
  2917  000146  5039               	movf	_temperatura_des,w,c
  2918  000148  5C2F               	subwf	_temperatura,w,c
  2919  00014A  0E00               	movlw	0
  2920  00014C  5830               	subwfb	_temperatura+1,w,c
  2921  00014E  B0D8               	btfsc	status,0,c
  2922  000150  D002               	goto	i2l120
  2923                           
  2924                           ;main.c: 83: PORTCbits.RC5 = 1;
  2925  000152  8A82               	bsf	3970,5,c	;volatile
  2926                           
  2927                           ;main.c: 84: }else{
  2928  000154  D001               	goto	i2l1761
  2929  000156                     i2l120:
  2930                           
  2931                           ;main.c: 89: PORTCbits.RC5 = 0;
  2932  000156  9A82               	bcf	3970,5,c	;volatile
  2933  000158                     i2l1761:
  2934                           
  2935                           ;main.c: 90: }
  2936                           ;main.c: 91: if(vent_on == 1){
  2937  000158  0438               	decf	_vent_on,w,c
  2938  00015A  A4D8               	btfss	status,2,c
  2939  00015C  D037               	goto	i2l1775
  2940                           
  2941                           ;main.c: 92: if(temperatura <= temperatura_des){
  2942  00015E  5039               	movf	_temperatura_des,w,c
  2943  000160  6E1F               	movwf	??_itrp& (0+255),c
  2944  000162  6A20               	clrf	(??_itrp+1)& (0+255),c
  2945  000164  502F               	movf	_temperatura,w,c
  2946  000166  5C1F               	subwf	??_itrp,w,c
  2947  000168  5030               	movf	_temperatura+1,w,c
  2948  00016A  5820               	subwfb	??_itrp+1,w,c
  2949  00016C  A0D8               	btfss	status,0,c
  2950  00016E  D004               	goto	i2l1767
  2951                           
  2952                           ;main.c: 93: PWM1_Set_Duty(0);
  2953  000170  0E00               	movlw	0
  2954  000172  ECDC  F003         	call	i2_PWM1_Set_Duty
  2955                           
  2956                           ;main.c: 94: }else if(temperatura - temperatura_des > 2){
  2957  000176  D02D               	goto	i2l131
  2958  000178                     i2l1767:
  2959  000178  5039               	movf	_temperatura_des,w,c
  2960  00017A  6E1F               	movwf	??_itrp& (0+255),c
  2961  00017C  6A20               	clrf	(??_itrp+1)& (0+255),c
  2962  00017E  1E1F               	comf	??_itrp,f,c
  2963  000180  1E20               	comf	??_itrp+1,f,c
  2964  000182  4A1F               	infsnz	??_itrp,f,c
  2965  000184  2A20               	incf	??_itrp+1,f,c
  2966  000186  502F               	movf	_temperatura,w,c
  2967  000188  261F               	addwf	??_itrp,f,c
  2968  00018A  5030               	movf	_temperatura+1,w,c
  2969  00018C  2220               	addwfc	??_itrp+1,f,c
  2970  00018E  5020               	movf	??_itrp+1,w,c
  2971  000190  E104               	bnz	i2u139_40
  2972  000192  0E03               	movlw	3
  2973  000194  5C1F               	subwf	??_itrp,w,c
  2974  000196  A0D8               	btfss	status,0,c
  2975  000198  D004               	goto	i2l1771
  2976  00019A                     i2u139_40:
  2977                           
  2978                           ;main.c: 95: PWM1_Set_Duty(255);
  2979  00019A  0EFF               	movlw	255
  2980  00019C  ECDC  F003         	call	i2_PWM1_Set_Duty
  2981                           
  2982                           ;main.c: 96: }else if(temperatura - temperatura_des < 2 && temperatura - temperatura_des
      +                           >=0){
  2983  0001A0  D018               	goto	i2l131
  2984  0001A2                     i2l1771:
  2985  0001A2  5039               	movf	_temperatura_des,w,c
  2986  0001A4  6E1F               	movwf	??_itrp& (0+255),c
  2987  0001A6  6A20               	clrf	(??_itrp+1)& (0+255),c
  2988  0001A8  1E1F               	comf	??_itrp,f,c
  2989  0001AA  1E20               	comf	??_itrp+1,f,c
  2990  0001AC  4A1F               	infsnz	??_itrp,f,c
  2991  0001AE  2A20               	incf	??_itrp+1,f,c
  2992  0001B0  502F               	movf	_temperatura,w,c
  2993  0001B2  261F               	addwf	??_itrp,f,c
  2994  0001B4  5030               	movf	_temperatura+1,w,c
  2995  0001B6  2220               	addwfc	??_itrp+1,f,c
  2996  0001B8  5020               	movf	??_itrp+1,w,c
  2997  0001BA  E10B               	bnz	i2l131
  2998  0001BC  0E02               	movlw	2
  2999  0001BE  5C1F               	subwf	??_itrp,w,c
  3000  0001C0  B0D8               	btfsc	status,0,c
  3001  0001C2  D007               	goto	i2l131
  3002                           
  3003                           ;main.c: 97: PWM1_Set_Duty(127);
  3004  0001C4  0E7F               	movlw	127
  3005  0001C6  ECDC  F003         	call	i2_PWM1_Set_Duty
  3006                           
  3007                           ;main.c: 98: }
  3008                           ;main.c: 99: }else{
  3009  0001CA  D003               	goto	i2l131
  3010  0001CC                     i2l1775:
  3011                           
  3012                           ;main.c: 100: PWM1_Set_Duty(0);
  3013  0001CC  0E00               	movlw	0
  3014  0001CE  ECDC  F003         	call	i2_PWM1_Set_Duty
  3015  0001D2                     i2l131:
  3016  0001D2  C02E  FFF5         	movff	??_itrp+15,tablat
  3017  0001D6  C02D  FFF8         	movff	??_itrp+14,tblptru
  3018  0001DA  C02C  FFF7         	movff	??_itrp+13,tblptrh
  3019  0001DE  C02B  FFF6         	movff	??_itrp+12,tblptrl
  3020  0001E2  C02A  FFF4         	movff	??_itrp+11,prodh
  3021  0001E6  C029  FFF3         	movff	??_itrp+10,prodl
  3022  0001EA  C028  FFDA         	movff	??_itrp+9,fsr2h
  3023  0001EE  C027  FFD9         	movff	??_itrp+8,fsr2l
  3024  0001F2  C026  FFE2         	movff	??_itrp+7,fsr1h
  3025  0001F6  C025  FFE1         	movff	??_itrp+6,fsr1l
  3026  0001FA  C024  FFEA         	movff	??_itrp+5,fsr0h
  3027  0001FE  C023  FFE9         	movff	??_itrp+4,fsr0l
  3028  000202  C022  FFFB         	movff	??_itrp+3,pclatu
  3029  000206  C021  FFFA         	movff	??_itrp+2,pclath
  3030  00020A  923C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3031  00020C  0011               	retfie		f
  3032  00020E                     __end_of_itrp:
  3033                           	opt stack 0
  3034                           pclatu	equ	0xFFB
  3035                           pclath	equ	0xFFA
  3036                           tblptru	equ	0xFF8
  3037                           tblptrh	equ	0xFF7
  3038                           tblptrl	equ	0xFF6
  3039                           tablat	equ	0xFF5
  3040                           prodh	equ	0xFF4
  3041                           prodl	equ	0xFF3
  3042                           intcon	equ	0xFF2
  3043                           postinc0	equ	0xFEE
  3044                           fsr0h	equ	0xFEA
  3045                           fsr0l	equ	0xFE9
  3046                           wreg	equ	0xFE8
  3047                           fsr1h	equ	0xFE2
  3048                           fsr1l	equ	0xFE1
  3049                           indf2	equ	0xFDF
  3050                           postinc2	equ	0xFDE
  3051                           fsr2h	equ	0xFDA
  3052                           fsr2l	equ	0xFD9
  3053                           status	equ	0xFD8
  3054                           
  3055 ;; *************** function i2_adc_amostra *****************
  3056 ;; Defined at:
  3057 ;;		line 44 in file "adc.c"
  3058 ;; Parameters:    Size  Location     Type
  3059 ;;  canal           1    wreg     unsigned char 
  3060 ;; Auto vars:     Size  Location     Type
  3061 ;;  canal           1    6[COMRAM] unsigned char 
  3062 ;; Return value:  Size  Location     Type
  3063 ;;                  2    0[COMRAM] unsigned int 
  3064 ;; Registers used:
  3065 ;;		wreg, status,2, status,0
  3066 ;; Tracked objects:
  3067 ;;		On entry : 0/0
  3068 ;;		On exit  : 0/0
  3069 ;;		Unchanged: 0/0
  3070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3071 ;;      Params:         2       0       0       0       0       0       0       0       0
  3072 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3073 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3074 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3075 ;;Total ram usage:        7 bytes
  3076 ;; Hardware stack levels used:    1
  3077 ;; This function calls:
  3078 ;;		Nothing
  3079 ;; This function is called by:
  3080 ;;		_itrp
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           	psect	text16
  3085  000A3E                     __ptext16:
  3086                           	opt stack 0
  3087  000A3E                     i2_adc_amostra:
  3088                           	opt stack 26
  3089                           
  3090                           ;incstack = 0
  3091                           ;i2adc_amostra@canal stored from wreg
  3092  000A3E  6E07               	movwf	i2adc_amostra@canal,c
  3093                           
  3094                           ;adc.c: 49: switch(canal)
  3095  000A40  D007               	goto	i2l1675
  3096  000A42                     i2l1667:
  3097                           
  3098                           ;adc.c: 52: ADCON0=0x01;
  3099  000A42  0E01               	movlw	1
  3100  000A44  D003               	goto	L6
  3101  000A46                     i2l1669:
  3102                           
  3103                           ;adc.c: 55: ADCON0=0x05;
  3104  000A46  0E05               	movlw	5
  3105  000A48  D001               	goto	L6
  3106  000A4A                     i2l1671:
  3107                           
  3108                           ;adc.c: 58: ADCON0=0x09;
  3109  000A4A  0E09               	movlw	9
  3110  000A4C                     L6:
  3111  000A4C  6EC2               	movwf	4034,c	;volatile
  3112                           
  3113                           ;adc.c: 60: }
  3114                           
  3115                           ;adc.c: 59: break;
  3116  000A4E  D00A               	goto	i2l176
  3117  000A50                     i2l1675:
  3118  000A50  5007               	movf	i2adc_amostra@canal,w,c
  3119                           
  3120                           ; Switch size 1, requested type "space"
  3121                           ; Number of cases is 3, Range of values is 0 to 2
  3122                           ; switch strategies available:
  3123                           ; Name         Instructions Cycles
  3124                           ; simple_byte           10     6 (average)
  3125                           ;	Chosen strategy is simple_byte
  3126  000A52  0A00               	xorlw	0	; case 0
  3127  000A54  B4D8               	btfsc	status,2,c
  3128  000A56  D7F5               	goto	i2l1667
  3129  000A58  0A01               	xorlw	1	; case 1
  3130  000A5A  B4D8               	btfsc	status,2,c
  3131  000A5C  D7F4               	goto	i2l1669
  3132  000A5E  0A03               	xorlw	3	; case 2
  3133  000A60  B4D8               	btfsc	status,2,c
  3134  000A62  D7F3               	goto	i2l1671
  3135  000A64                     i2l176:
  3136                           
  3137                           ;adc.c: 77: ADCON0bits.GO=1;
  3138  000A64  82C2               	bsf	4034,1,c	;volatile
  3139  000A66                     i2l179:
  3140  000A66  B2C2               	btfsc	4034,1,c	;volatile
  3141  000A68  D7FE               	goto	i2l179
  3142                           
  3143                           ;adc.c: 80: return ((((unsigned int)ADRESH)<<2)|(ADRESL>>6));
  3144  000A6A  CFC3 F003          	movff	4035,??i2_adc_amostra	;volatile
  3145  000A6E  0E06               	movlw	6
  3146  000A70  6E04               	movwf	(??i2_adc_amostra+1)& (0+255),c
  3147  000A72                     i2u119_45:
  3148  000A72  90D8               	bcf	status,0,c
  3149  000A74  3203               	rrcf	??i2_adc_amostra,f,c
  3150  000A76  2E04               	decfsz	(??i2_adc_amostra+1)& (0+255),f,c
  3151  000A78  D7FC               	goto	i2u119_45
  3152  000A7A  5003               	movf	??i2_adc_amostra,w,c
  3153  000A7C  CFC4 F005          	movff	4036,??i2_adc_amostra+2	;volatile
  3154  000A80  6A06               	clrf	(??i2_adc_amostra+3)& (0+255),c
  3155  000A82  90D8               	bcf	status,0,c
  3156  000A84  3605               	rlcf	??i2_adc_amostra+2,f,c
  3157  000A86  3606               	rlcf	??i2_adc_amostra+3,f,c
  3158  000A88  90D8               	bcf	status,0,c
  3159  000A8A  3605               	rlcf	??i2_adc_amostra+2,f,c
  3160  000A8C  3606               	rlcf	??i2_adc_amostra+3,f,c
  3161  000A8E  1005               	iorwf	??i2_adc_amostra+2,w,c
  3162  000A90  6E01               	movwf	?i2_adc_amostra,c
  3163  000A92  5006               	movf	??i2_adc_amostra+3,w,c
  3164  000A94  6E02               	movwf	?i2_adc_amostra+1,c
  3165  000A96  0012               	return	
  3166  000A98                     __end_ofi2_adc_amostra:
  3167                           	opt stack 0
  3168                           pclatu	equ	0xFFB
  3169                           pclath	equ	0xFFA
  3170                           tblptru	equ	0xFF8
  3171                           tblptrh	equ	0xFF7
  3172                           tblptrl	equ	0xFF6
  3173                           tablat	equ	0xFF5
  3174                           prodh	equ	0xFF4
  3175                           prodl	equ	0xFF3
  3176                           intcon	equ	0xFF2
  3177                           postinc0	equ	0xFEE
  3178                           fsr0h	equ	0xFEA
  3179                           fsr0l	equ	0xFE9
  3180                           wreg	equ	0xFE8
  3181                           fsr1h	equ	0xFE2
  3182                           fsr1l	equ	0xFE1
  3183                           indf2	equ	0xFDF
  3184                           postinc2	equ	0xFDE
  3185                           fsr2h	equ	0xFDA
  3186                           fsr2l	equ	0xFD9
  3187                           status	equ	0xFD8
  3188                           
  3189 ;; *************** function i2_PWM1_Set_Duty *****************
  3190 ;; Defined at:
  3191 ;;		line 105 in file "pwm.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;  d               1    wreg     unsigned char 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;  d               1   27[COMRAM] unsigned char 
  3196 ;;  PWM1_Set_Dut    2   28[COMRAM] unsigned int 
  3197 ;; Return value:  Size  Location     Type
  3198 ;;                  1    wreg      void 
  3199 ;; Registers used:
  3200 ;;		wreg, status,2, status,0, cstack
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3206 ;;      Params:         0       0       0       0       0       0       0       0       0
  3207 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3208 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3209 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3210 ;;Total ram usage:        5 bytes
  3211 ;; Hardware stack levels used:    1
  3212 ;; Hardware stack levels required when called:    1
  3213 ;; This function calls:
  3214 ;;		i2___lldiv
  3215 ;;		i2___lmul
  3216 ;; This function is called by:
  3217 ;;		_itrp
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           
  3221                           	psect	text17
  3222  0007B8                     __ptext17:
  3223                           	opt stack 0
  3224  0007B8                     i2_PWM1_Set_Duty:
  3225                           	opt stack 25
  3226                           
  3227                           ;incstack = 0
  3228                           ;i2PWM1_Set_Duty@d stored from wreg
  3229  0007B8  6E1C               	movwf	i2PWM1_Set_Duty@d,c
  3230                           
  3231                           ;pwm.c: 107: unsigned int temp;
  3232                           ;pwm.c: 109: temp=(((unsigned long)(d))*((PR2<<2)|0x03))/255;
  3233  0007BA  501C               	movf	i2PWM1_Set_Duty@d,w,c
  3234  0007BC  6E01               	movwf	i2___lmul@multiplier,c
  3235  0007BE  6A02               	clrf	i2___lmul@multiplier+1,c
  3236  0007C0  6A03               	clrf	i2___lmul@multiplier+2,c
  3237  0007C2  6A04               	clrf	i2___lmul@multiplier+3,c
  3238  0007C4  50CB               	movf	4043,w,c	;volatile
  3239  0007C6  6E1A               	movwf	??i2_PWM1_Set_Duty& (0+255),c
  3240  0007C8  6A1B               	clrf	(??i2_PWM1_Set_Duty+1)& (0+255),c
  3241  0007CA  90D8               	bcf	status,0,c
  3242  0007CC  361A               	rlcf	??i2_PWM1_Set_Duty,f,c
  3243  0007CE  361B               	rlcf	??i2_PWM1_Set_Duty+1,f,c
  3244  0007D0  90D8               	bcf	status,0,c
  3245  0007D2  361A               	rlcf	??i2_PWM1_Set_Duty,f,c
  3246  0007D4  361B               	rlcf	??i2_PWM1_Set_Duty+1,f,c
  3247  0007D6  0E03               	movlw	3
  3248  0007D8  121A               	iorwf	??i2_PWM1_Set_Duty,f,c
  3249  0007DA  0E00               	movlw	0
  3250  0007DC  121B               	iorwf	??i2_PWM1_Set_Duty+1,f,c
  3251  0007DE  C01A  F005         	movff	??i2_PWM1_Set_Duty,i2___lmul@multiplicand
  3252  0007E2  C01B  F006         	movff	??i2_PWM1_Set_Duty+1,i2___lmul@multiplicand+1
  3253  0007E6  0E00               	movlw	0
  3254  0007E8  BE06               	btfsc	i2___lmul@multiplicand+1,7,c
  3255  0007EA  0EFF               	movlw	-1
  3256  0007EC  6E07               	movwf	i2___lmul@multiplicand+2,c
  3257  0007EE  6E08               	movwf	i2___lmul@multiplicand+3,c
  3258  0007F0  EC4C  F005         	call	i2___lmul	;wreg free
  3259  0007F4  C001  F00D         	movff	?i2___lmul,i2___lldiv@dividend
  3260  0007F8  C002  F00E         	movff	?i2___lmul+1,i2___lldiv@dividend+1
  3261  0007FC  C003  F00F         	movff	?i2___lmul+2,i2___lldiv@dividend+2
  3262  000800  C004  F010         	movff	?i2___lmul+3,i2___lldiv@dividend+3
  3263  000804  0EFF               	movlw	255
  3264  000806  6E11               	movwf	i2___lldiv@divisor,c
  3265  000808  0E00               	movlw	0
  3266  00080A  6E12               	movwf	i2___lldiv@divisor+1,c
  3267  00080C  0E00               	movlw	0
  3268  00080E  6E13               	movwf	i2___lldiv@divisor+2,c
  3269  000810  0E00               	movlw	0
  3270  000812  6E14               	movwf	i2___lldiv@divisor+3,c
  3271  000814  EC69  F004         	call	i2___lldiv	;wreg free
  3272  000818  C00D  F01D         	movff	?i2___lldiv,i2PWM1_Set_Duty@temp
  3273  00081C  C00E  F01E         	movff	?i2___lldiv+1,i2PWM1_Set_Duty@temp+1
  3274                           
  3275                           ;pwm.c: 111: CCPR1L= (0x03FC&temp)>>2;
  3276  000820  C01D  F01A         	movff	i2PWM1_Set_Duty@temp,??i2_PWM1_Set_Duty
  3277  000824  C01E  F01B         	movff	i2PWM1_Set_Duty@temp+1,??i2_PWM1_Set_Duty+1
  3278  000828  90D8               	bcf	status,0,c
  3279  00082A  321B               	rrcf	??i2_PWM1_Set_Duty+1,f,c
  3280  00082C  321A               	rrcf	??i2_PWM1_Set_Duty,f,c
  3281  00082E  90D8               	bcf	status,0,c
  3282  000830  321B               	rrcf	??i2_PWM1_Set_Duty+1,f,c
  3283  000832  321A               	rrcf	??i2_PWM1_Set_Duty,f,c
  3284  000834  501A               	movf	??i2_PWM1_Set_Duty,w,c
  3285  000836  6EBE               	movwf	4030,c	;volatile
  3286                           
  3287                           ;pwm.c: 112: CCP1CON=((0x0003&temp)<<4)|0x0C;
  3288  000838  C01D  F01A         	movff	i2PWM1_Set_Duty@temp,??i2_PWM1_Set_Duty
  3289  00083C  0E03               	movlw	3
  3290  00083E  161A               	andwf	??i2_PWM1_Set_Duty,f,c
  3291  000840  381A               	swapf	??i2_PWM1_Set_Duty,w,c
  3292  000842  0BF0               	andlw	240
  3293  000844  090C               	iorlw	12
  3294  000846  6EBD               	movwf	4029,c	;volatile
  3295  000848  0012               	return		;funcret
  3296  00084A                     __end_ofi2_PWM1_Set_Duty:
  3297                           	opt stack 0
  3298                           pclatu	equ	0xFFB
  3299                           pclath	equ	0xFFA
  3300                           tblptru	equ	0xFF8
  3301                           tblptrh	equ	0xFF7
  3302                           tblptrl	equ	0xFF6
  3303                           tablat	equ	0xFF5
  3304                           prodh	equ	0xFF4
  3305                           prodl	equ	0xFF3
  3306                           intcon	equ	0xFF2
  3307                           postinc0	equ	0xFEE
  3308                           fsr0h	equ	0xFEA
  3309                           fsr0l	equ	0xFE9
  3310                           wreg	equ	0xFE8
  3311                           fsr1h	equ	0xFE2
  3312                           fsr1l	equ	0xFE1
  3313                           indf2	equ	0xFDF
  3314                           postinc2	equ	0xFDE
  3315                           fsr2h	equ	0xFDA
  3316                           fsr2l	equ	0xFD9
  3317                           status	equ	0xFD8
  3318                           
  3319 ;; *************** function i2___lmul *****************
  3320 ;; Defined at:
  3321 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul32.c"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;  multiplier      4    0[COMRAM] unsigned long 
  3324 ;;  multiplicand    4    4[COMRAM] unsigned long 
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;  __lmul          4    8[COMRAM] unsigned long 
  3327 ;; Return value:  Size  Location     Type
  3328 ;;                  4    0[COMRAM] unsigned long 
  3329 ;; Registers used:
  3330 ;;		wreg, status,2, status,0
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3336 ;;      Params:         8       0       0       0       0       0       0       0       0
  3337 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3338 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3339 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3340 ;;Total ram usage:       12 bytes
  3341 ;; Hardware stack levels used:    1
  3342 ;; This function calls:
  3343 ;;		Nothing
  3344 ;; This function is called by:
  3345 ;;		i2_PWM1_Set_Duty
  3346 ;; This function uses a non-reentrant model
  3347 ;;
  3348                           
  3349                           	psect	text18
  3350  000A98                     __ptext18:
  3351                           	opt stack 0
  3352  000A98                     i2___lmul:
  3353                           	opt stack 25
  3354                           
  3355                           ;incstack = 0
  3356  000A98  0E00               	movlw	0
  3357  000A9A  6E09               	movwf	i2___lmul@product,c
  3358  000A9C  0E00               	movlw	0
  3359  000A9E  6E0A               	movwf	i2___lmul@product+1,c
  3360  000AA0  0E00               	movlw	0
  3361  000AA2  6E0B               	movwf	i2___lmul@product+2,c
  3362  000AA4  0E00               	movlw	0
  3363  000AA6  6E0C               	movwf	i2___lmul@product+3,c
  3364  000AA8                     i2l1557:
  3365  000AA8  A001               	btfss	i2___lmul@multiplier,0,c
  3366  000AAA  D008               	goto	i2l1561
  3367  000AAC  5005               	movf	i2___lmul@multiplicand,w,c
  3368  000AAE  2609               	addwf	i2___lmul@product,f,c
  3369  000AB0  5006               	movf	i2___lmul@multiplicand+1,w,c
  3370  000AB2  220A               	addwfc	i2___lmul@product+1,f,c
  3371  000AB4  5007               	movf	i2___lmul@multiplicand+2,w,c
  3372  000AB6  220B               	addwfc	i2___lmul@product+2,f,c
  3373  000AB8  5008               	movf	i2___lmul@multiplicand+3,w,c
  3374  000ABA  220C               	addwfc	i2___lmul@product+3,f,c
  3375  000ABC                     i2l1561:
  3376  000ABC  90D8               	bcf	status,0,c
  3377  000ABE  3605               	rlcf	i2___lmul@multiplicand,f,c
  3378  000AC0  3606               	rlcf	i2___lmul@multiplicand+1,f,c
  3379  000AC2  3607               	rlcf	i2___lmul@multiplicand+2,f,c
  3380  000AC4  3608               	rlcf	i2___lmul@multiplicand+3,f,c
  3381  000AC6  90D8               	bcf	status,0,c
  3382  000AC8  3204               	rrcf	i2___lmul@multiplier+3,f,c
  3383  000ACA  3203               	rrcf	i2___lmul@multiplier+2,f,c
  3384  000ACC  3202               	rrcf	i2___lmul@multiplier+1,f,c
  3385  000ACE  3201               	rrcf	i2___lmul@multiplier,f,c
  3386  000AD0  5001               	movf	i2___lmul@multiplier,w,c
  3387  000AD2  1002               	iorwf	i2___lmul@multiplier+1,w,c
  3388  000AD4  1003               	iorwf	i2___lmul@multiplier+2,w,c
  3389  000AD6  1004               	iorwf	i2___lmul@multiplier+3,w,c
  3390  000AD8  A4D8               	btfss	status,2,c
  3391  000ADA  D7E6               	goto	i2l1557
  3392  000ADC  C009  F001         	movff	i2___lmul@product,?i2___lmul
  3393  000AE0  C00A  F002         	movff	i2___lmul@product+1,?i2___lmul+1
  3394  000AE4  C00B  F003         	movff	i2___lmul@product+2,?i2___lmul+2
  3395  000AE8  C00C  F004         	movff	i2___lmul@product+3,?i2___lmul+3
  3396  000AEC  0012               	return		;funcret
  3397  000AEE                     __end_ofi2___lmul:
  3398                           	opt stack 0
  3399                           pclatu	equ	0xFFB
  3400                           pclath	equ	0xFFA
  3401                           tblptru	equ	0xFF8
  3402                           tblptrh	equ	0xFF7
  3403                           tblptrl	equ	0xFF6
  3404                           tablat	equ	0xFF5
  3405                           prodh	equ	0xFF4
  3406                           prodl	equ	0xFF3
  3407                           intcon	equ	0xFF2
  3408                           postinc0	equ	0xFEE
  3409                           fsr0h	equ	0xFEA
  3410                           fsr0l	equ	0xFE9
  3411                           wreg	equ	0xFE8
  3412                           fsr1h	equ	0xFE2
  3413                           fsr1l	equ	0xFE1
  3414                           indf2	equ	0xFDF
  3415                           postinc2	equ	0xFDE
  3416                           fsr2h	equ	0xFDA
  3417                           fsr2l	equ	0xFD9
  3418                           status	equ	0xFD8
  3419                           
  3420 ;; *************** function i2___lldiv *****************
  3421 ;; Defined at:
  3422 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;  dividend        4   12[COMRAM] unsigned long 
  3425 ;;  divisor         4   16[COMRAM] unsigned long 
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;  __lldiv         4   20[COMRAM] unsigned long 
  3428 ;;  __lldiv         1   24[COMRAM] unsigned char 
  3429 ;; Return value:  Size  Location     Type
  3430 ;;                  4   12[COMRAM] unsigned long 
  3431 ;; Registers used:
  3432 ;;		wreg, status,2, status,0
  3433 ;; Tracked objects:
  3434 ;;		On entry : 0/0
  3435 ;;		On exit  : 0/0
  3436 ;;		Unchanged: 0/0
  3437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3438 ;;      Params:         8       0       0       0       0       0       0       0       0
  3439 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3440 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3441 ;;      Totals:        13       0       0       0       0       0       0       0       0
  3442 ;;Total ram usage:       13 bytes
  3443 ;; Hardware stack levels used:    1
  3444 ;; This function calls:
  3445 ;;		Nothing
  3446 ;; This function is called by:
  3447 ;;		i2_PWM1_Set_Duty
  3448 ;; This function uses a non-reentrant model
  3449 ;;
  3450                           
  3451                           	psect	text19
  3452  0008D2                     __ptext19:
  3453                           	opt stack 0
  3454  0008D2                     i2___lldiv:
  3455                           	opt stack 25
  3456                           
  3457                           ;incstack = 0
  3458  0008D2  0E00               	movlw	0
  3459  0008D4  6E15               	movwf	i2___lldiv@quotient,c
  3460  0008D6  0E00               	movlw	0
  3461  0008D8  6E16               	movwf	i2___lldiv@quotient+1,c
  3462  0008DA  0E00               	movlw	0
  3463  0008DC  6E17               	movwf	i2___lldiv@quotient+2,c
  3464  0008DE  0E00               	movlw	0
  3465  0008E0  6E18               	movwf	i2___lldiv@quotient+3,c
  3466  0008E2  5011               	movf	i2___lldiv@divisor,w,c
  3467  0008E4  1012               	iorwf	i2___lldiv@divisor+1,w,c
  3468  0008E6  1013               	iorwf	i2___lldiv@divisor+2,w,c
  3469  0008E8  1014               	iorwf	i2___lldiv@divisor+3,w,c
  3470  0008EA  B4D8               	btfsc	status,2,c
  3471  0008EC  D02A               	goto	i2l651
  3472  0008EE  0E01               	movlw	1
  3473  0008F0  6E19               	movwf	i2___lldiv@counter,c
  3474  0008F2  D006               	goto	i2l1573
  3475  0008F4                     i2l1571:
  3476  0008F4  90D8               	bcf	status,0,c
  3477  0008F6  3611               	rlcf	i2___lldiv@divisor,f,c
  3478  0008F8  3612               	rlcf	i2___lldiv@divisor+1,f,c
  3479  0008FA  3613               	rlcf	i2___lldiv@divisor+2,f,c
  3480  0008FC  3614               	rlcf	i2___lldiv@divisor+3,f,c
  3481  0008FE  2A19               	incf	i2___lldiv@counter,f,c
  3482  000900                     i2l1573:
  3483  000900  AE14               	btfss	i2___lldiv@divisor+3,7,c
  3484  000902  D7F8               	goto	i2l1571
  3485  000904                     i2l1575:
  3486  000904  90D8               	bcf	status,0,c
  3487  000906  3615               	rlcf	i2___lldiv@quotient,f,c
  3488  000908  3616               	rlcf	i2___lldiv@quotient+1,f,c
  3489  00090A  3617               	rlcf	i2___lldiv@quotient+2,f,c
  3490  00090C  3618               	rlcf	i2___lldiv@quotient+3,f,c
  3491  00090E  5011               	movf	i2___lldiv@divisor,w,c
  3492  000910  5C0D               	subwf	i2___lldiv@dividend,w,c
  3493  000912  5012               	movf	i2___lldiv@divisor+1,w,c
  3494  000914  580E               	subwfb	i2___lldiv@dividend+1,w,c
  3495  000916  5013               	movf	i2___lldiv@divisor+2,w,c
  3496  000918  580F               	subwfb	i2___lldiv@dividend+2,w,c
  3497  00091A  5014               	movf	i2___lldiv@divisor+3,w,c
  3498  00091C  5810               	subwfb	i2___lldiv@dividend+3,w,c
  3499  00091E  A0D8               	btfss	status,0,c
  3500  000920  D009               	goto	i2l1583
  3501  000922  5011               	movf	i2___lldiv@divisor,w,c
  3502  000924  5E0D               	subwf	i2___lldiv@dividend,f,c
  3503  000926  5012               	movf	i2___lldiv@divisor+1,w,c
  3504  000928  5A0E               	subwfb	i2___lldiv@dividend+1,f,c
  3505  00092A  5013               	movf	i2___lldiv@divisor+2,w,c
  3506  00092C  5A0F               	subwfb	i2___lldiv@dividend+2,f,c
  3507  00092E  5014               	movf	i2___lldiv@divisor+3,w,c
  3508  000930  5A10               	subwfb	i2___lldiv@dividend+3,f,c
  3509  000932  8015               	bsf	i2___lldiv@quotient,0,c
  3510  000934                     i2l1583:
  3511  000934  90D8               	bcf	status,0,c
  3512  000936  3214               	rrcf	i2___lldiv@divisor+3,f,c
  3513  000938  3213               	rrcf	i2___lldiv@divisor+2,f,c
  3514  00093A  3212               	rrcf	i2___lldiv@divisor+1,f,c
  3515  00093C  3211               	rrcf	i2___lldiv@divisor,f,c
  3516  00093E  2E19               	decfsz	i2___lldiv@counter,f,c
  3517  000940  D7E1               	goto	i2l1575
  3518  000942                     i2l651:
  3519  000942  C015  F00D         	movff	i2___lldiv@quotient,?i2___lldiv
  3520  000946  C016  F00E         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
  3521  00094A  C017  F00F         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
  3522  00094E  C018  F010         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
  3523  000952  0012               	return		;funcret
  3524  000954                     __end_ofi2___lldiv:
  3525                           	opt stack 0
  3526  0000                     pclatu	equ	0xFFB
  3527                           pclath	equ	0xFFA
  3528                           tblptru	equ	0xFF8
  3529                           tblptrh	equ	0xFF7
  3530                           tblptrl	equ	0xFF6
  3531                           tablat	equ	0xFF5
  3532                           prodh	equ	0xFF4
  3533                           prodl	equ	0xFF3
  3534                           intcon	equ	0xFF2
  3535                           postinc0	equ	0xFEE
  3536                           fsr0h	equ	0xFEA
  3537                           fsr0l	equ	0xFE9
  3538                           wreg	equ	0xFE8
  3539                           fsr1h	equ	0xFE2
  3540                           fsr1l	equ	0xFE1
  3541                           indf2	equ	0xFDF
  3542                           postinc2	equ	0xFDE
  3543                           fsr2h	equ	0xFDA
  3544                           fsr2l	equ	0xFD9
  3545                           status	equ	0xFD8
  3546                           pclatu	equ	0xFFB
  3547                           pclath	equ	0xFFA
  3548                           tblptru	equ	0xFF8
  3549                           tblptrh	equ	0xFF7
  3550                           tblptrl	equ	0xFF6
  3551                           tablat	equ	0xFF5
  3552                           prodh	equ	0xFF4
  3553                           prodl	equ	0xFF3
  3554                           intcon	equ	0xFF2
  3555                           postinc0	equ	0xFEE
  3556                           fsr0h	equ	0xFEA
  3557                           fsr0l	equ	0xFE9
  3558                           wreg	equ	0xFE8
  3559                           fsr1h	equ	0xFE2
  3560                           fsr1l	equ	0xFE1
  3561                           indf2	equ	0xFDF
  3562                           postinc2	equ	0xFDE
  3563                           fsr2h	equ	0xFDA
  3564                           fsr2l	equ	0xFD9
  3565                           status	equ	0xFD8
  3566                           
  3567                           	psect	rparam
  3568  0000                     pclatu	equ	0xFFB
  3569                           pclath	equ	0xFFA
  3570                           tblptru	equ	0xFF8
  3571                           tblptrh	equ	0xFF7
  3572                           tblptrl	equ	0xFF6
  3573                           tablat	equ	0xFF5
  3574                           prodh	equ	0xFF4
  3575                           prodl	equ	0xFF3
  3576                           intcon	equ	0xFF2
  3577                           postinc0	equ	0xFEE
  3578                           fsr0h	equ	0xFEA
  3579                           fsr0l	equ	0xFE9
  3580                           wreg	equ	0xFE8
  3581                           fsr1h	equ	0xFE2
  3582                           fsr1l	equ	0xFE1
  3583                           indf2	equ	0xFDF
  3584                           postinc2	equ	0xFDE
  3585                           fsr2h	equ	0xFDA
  3586                           fsr2l	equ	0xFD9
  3587                           status	equ	0xFD8
  3588                           
  3589                           	psect	temp
  3590  00003C                     btemp:
  3591                           	opt stack 0
  3592  00003C                     	ds	1
  3593  0000                     int$flags	set	btemp
  3594                           pclatu	equ	0xFFB
  3595                           pclath	equ	0xFFA
  3596                           tblptru	equ	0xFF8
  3597                           tblptrh	equ	0xFF7
  3598                           tblptrl	equ	0xFF6
  3599                           tablat	equ	0xFF5
  3600                           prodh	equ	0xFF4
  3601                           prodl	equ	0xFF3
  3602                           intcon	equ	0xFF2
  3603                           postinc0	equ	0xFEE
  3604                           fsr0h	equ	0xFEA
  3605                           fsr0l	equ	0xFE9
  3606                           wreg	equ	0xFE8
  3607                           fsr1h	equ	0xFE2
  3608                           fsr1l	equ	0xFE1
  3609                           indf2	equ	0xFDF
  3610                           postinc2	equ	0xFDE
  3611                           fsr2h	equ	0xFDA
  3612                           fsr2l	equ	0xFD9
  3613                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     46      59
    BANK0           160     30      35
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    serial_rx_str_until@buff	PTR unsigned char  size(2) Largest target is 5
		 -> buffer(BANK0[5]), 

    sp__serial_rx_str	PTR unsigned char  size(2) Largest target is 0

    sp__serial_rx_str_until	PTR unsigned char  size(2) Largest target is 5
		 -> buffer(BANK0[5]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _itrp in COMRAM

    _itrp->i2_PWM1_Set_Duty
    i2_PWM1_Set_Duty->i2___lldiv
    i2___lldiv->i2___lmul

Critical Paths under _main in BANK0

    _setup->_PWM1_Set_Duty
    _PWM1_Set_Duty->___lldiv
    ___lldiv->___lmul
    _PWM1_Init->___aldiv
    _loop->_serial_rx_str_until
    _serial_rx_str_until->_atraso_ms

Critical Paths under _itrp in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _itrp in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _itrp in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _itrp in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _itrp in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _itrp in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _itrp in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _itrp in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3883
                               _loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1760
                          _PWM1_Init
                      _PWM1_Set_Duty
                         _PWM1_Start
                           _adc_init
                        _serial_init
 ---------------------------------------------------------------------------------
 (2) _serial_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Set_Duty                                        5     5      0     895
                                             25 BANK0      5     5      0
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     404
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     395
                                             12 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _PWM1_Init                                            8     6      2     865
                                             14 BANK0      8     6      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     599
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _loop                                                 2     2      0    2123
                                             18 BANK0      2     2      0
                        _adc_amostra
                          _atraso_ms
                _serial_rx_str_until
                          _serial_tx
 ---------------------------------------------------------------------------------
 (2) _serial_tx                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _serial_rx_str_until                                 12     7      5    1371
                                              6 BANK0     12     7      5
                          _atraso_ms
 ---------------------------------------------------------------------------------
 (3) _atraso_ms                                            6     4      2     690
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _adc_amostra                                          7     5      2      31
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _itrp                                                16    16      0     447
                                             30 COMRAM    16    16      0
                    i2_PWM1_Set_Duty
                      i2_adc_amostra
 ---------------------------------------------------------------------------------
 (5) i2_adc_amostra                                        7     5      2      22
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) i2_PWM1_Set_Duty                                      5     5      0     425
                                             25 COMRAM     5     5      0
                          i2___lldiv
                           i2___lmul
 ---------------------------------------------------------------------------------
 (6) i2___lmul                                            12     4      8     144
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) i2___lldiv                                           13     5      8     214
                                             12 COMRAM    13     5      8
                           i2___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     _adc_amostra
     _atraso_ms
     _serial_rx_str_until
       _atraso_ms
     _serial_tx
   _setup
     _PWM1_Init
       ___aldiv
     _PWM1_Set_Duty
       ___lldiv
         ___lmul (ARG)
       ___lmul
     _PWM1_Start
     _adc_init
     _serial_init

 _itrp (ROOT)
   i2_PWM1_Set_Duty
     i2___lldiv
       i2___lmul (ARG)
     i2___lmul
   i2_adc_amostra

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1E      23       5       21.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2E      3B       1       62.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5E      20        0.0%
DATA                 0      0      5E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sat Sep 30 13:59:10 2017

                           l1 0B06         ??_serial_rx_str_until 006B             PWM1_Set_Duty@temp 007C  
                 __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000          __size_of_adc_amostra 0074  
                         l206 0BAA                           l209 0BB0                           l238 0BE0  
                         l176 09F4                           l179 09F6                           l289 0330  
                         l651 06F8                  __CFG_CPB$OFF 000000                           _PR2 000FCB  
                __CFG_CPD$OFF 000000                  __CFG_BOR$OFF 000000                           wreg 000FE8  
                __CFG_FOSC$HS 000000                  __CFG_LVP$OFF 000000                  __CFG_WDT$OFF 000000  
                        l2001 0348                          l2003 0356                          l2005 035A  
                        l2015 03D2                          l2019 0428                          l2107 0B9A  
                        l2071 0586                          l2091 061E                          l2075 059A  
                        l2095 062E                          l2099 063E                          l1901 067C  
                        l1903 068C                          l1921 09D4                          l1913 06E6  
                        l1905 0692                          l1923 09D8                          l1835 0B00  
                        l1843 0966                          l1919 09D0                          l1927 09DE  
                        l1839 0B24                          l1871 027E                          l1847 098C  
                        l1873 028E                          l1865 0250                          l1891 0316  
                        l1883 02E8                          l1875 0294                          l1859 0232  
                        l1971 04BA                          l1981 0544                          l1887 02FA  
                        l1977 050E                          l1997 0334                          u1705 0A04  
                        u1715 047C                          u1745 0528        __size_ofi2_adc_amostra 005A  
                        _main 0B7E                          _hora 0036                          _loop 054E  
                        _itrp 0008                          _temp 0031                          fsr0h 000FEA  
                        fsr1h 000FE2                          fsr2h 000FDA                          fsr0l 000FE9  
                        indf2 000FDF                          fsr1l 000FE1                          fsr2l 000FD9  
                        btemp 003C                          prodh 000FF4                          prodl 000FF3  
                        start 000E                 __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000  
                ___param_bank 000000                 __CFG_PLLDIV$2 000000                __CFG_CCP2MX$ON 000000  
             __end_of___aldiv 0328                         ?_main 0001                         ?_loop 0001  
                       ?_itrp 0001                   atraso_ms@j1 0064                   atraso_ms@j2 0065  
             __end_of___lldiv 070A                         i2l120 0156                         i2l131 01D2  
                       i2l176 0A64                         i2l179 0A66                         i2l651 0942  
                       _RCREG 000FAE                         _TMR0H 000FD7                         _TMR1H 000FCF  
                       _TMR0L 000FD6                         _TMR3H 000FB3                         _TMR1L 000FCE  
                       _TMR3L 000FB2                         _SPBRG 000FAF                 __CFG_USBDIV$2 000000  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISC 000F94  
                       _TRISD 000F95                         _TRISE 000F96                         _TXREG 000FAD  
               __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000           ___lmul@multiplicand 0064                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000            __size_of_PWM1_Init 010C  
                 ?_PWM1_Start 0001                __CFG_EBTRB$OFF 000000                         _setup 084A  
                       pclath 000FFA                         tablat 000FF5              __end_ofi2___lmul 0AEE  
                       status 000FD8                __CFG_ICPRT$OFF 000000                __CFG_PBADEN$ON 000000  
          __size_ofi2___lldiv 0082               __initialization 0B3A             i2___lldiv@divisor 0011  
                __end_of_main 0BA0             i2___lldiv@counter 0019                  __end_of_loop 064E  
                __end_of_itrp 020E                 i2_adc_amostra 0A3E                        ??_main 007E  
                      ??_loop 0072                        ??_itrp 001F                 __activetblptr 000002  
             i2_PWM1_Set_Duty 07B8                        _ADCON0 000FC2                        _ADCON1 000FC1  
                      _ADCON2 000FC0                        _ADRESH 000FC4                        _ADRESL 000FC3  
                      _CCPR2H 000FBC                        _CCPR1L 000FBE                        _CCPR2L 000FBB  
                      ?_setup 0001              __end_of_adc_init 0BD8                        i2l1561 0ABC  
                      i2l1713 0078                        i2l1571 08F4                        i2l1707 006A  
                      i2l1573 0900                        i2l1557 0AA8                        i2l1741 00EE  
                      i2l1717 0084                        i2l1725 009E                        i2l1583 0934  
                      i2l1575 0904                        i2l1671 0A4A                        i2l1761 0158  
                      i2l1745 0104                        i2l1737 00D8                        i2l1667 0A42  
                      i2l1675 0A50                        i2l1771 01A2                        i2l1669 0A46  
                      i2l1749 0126                        i2l1767 0178                        i2l1775 01CC  
            i2___lmul@product 0009                __CFG_XINST$OFF 000000                  ?_serial_init 0001  
           __end_of_PWM1_Init 054E                        ___lmul 0954                     ??___aldiv 0068  
         __size_of_PWM1_Start 0016                     ??___lldiv 0074                        _buffer 007E  
              ?i2_adc_amostra 0001                        clear_0 0B6A                        _minuto 0035  
        serial_rx_str_until@i 0070                  __pdataCOMRAM 0039             __end_ofi2___lldiv 0954  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                  __accesstop 0060       __end_of__initialization 0B70                 ___rparam_used 000001  
              __pcstackCOMRAM 0001            i2___lldiv@dividend 000D         __end_of_PWM1_Set_Duty 07B8  
               _hora_refeicao 003B       __end_ofi2_PWM1_Set_Duty 084A                 __end_of_setup 08D2  
                   ?i2___lmul 0001               _temperatura_des 0039                       ??_setup 007E  
          __size_of_atraso_ms 004C            i2___lldiv@quotient 0015                    __pbssBANK0 007E  
          i2adc_amostra@canal 0007   __end_of_serial_rx_str_until 0442               ??i2_adc_amostra 0003  
                     ?___lmul 0060              i2PWM1_Set_Duty@d 001C                 ??_adc_amostra 0062  
                     _CCP1CON 000FBD                       _CCP2CON 000FBA                ___lmul@product 0068  
                   ?_adc_init 0001            __size_of_serial_tx 000E                    ??i2___lmul 0009  
                ??_PWM1_Start 0060               _minuto_refeicao 003A                    _gira_servo 0033  
             __CFG_VREGEN$OFF 000000                       __Hparam 0000                       __Lparam 0000  
                     ___aldiv 020E               __size_of___lmul 0076                       ___lldiv 064E  
          __end_of_PWM1_Start 0BB6          __size_of_serial_init 0014             __end_of_atraso_ms 0B3A  
            ?i2_PWM1_Set_Duty 0001               __CFG_STVREN$OFF 000000                       __pcinit 0B3A  
                     __ramtop 0800                    ??_adc_init 0060                       __ptext0 0B7E  
                     __ptext1 084A                       __ptext2 0BB6                       __ptext3 0BCA  
                     __ptext4 0BA0                       __ptext5 070A                       __ptext6 0954  
                     __ptext7 064E                       __ptext8 0442                       __ptext9 020E  
                   _T0CONbits 000FD5                     _T1CONbits 000FCD                     _T2CONbits 000FCA  
         __end_of_adc_amostra 0A3E                     _T3CONbits 000FB1              ___aldiv@dividend 0060  
                     _segundo 0034                       _vent_on 0038                __pintcode_body 0012  
        end_of_initialization 0B70                 __Lmediumconst 0000                       int_func 0012  
           __end_of_serial_tx 0BE6               ___lldiv@divisor 0070               ___lldiv@counter 0078  
                   _RCSTAbits 000FAB              ___aldiv@quotient 006A                       postinc0 000FEE  
                     postinc2 000FDE           i2___lmul@multiplier 0001                     _PWM1_Init 0442  
                   _PORTCbits 000F82                     _TRISAbits 000F92                     _TRISCbits 000F94  
              PWM1_Set_Duty@d 007B                     i2___lldiv 08D2                     _TXSTAbits 000FAC  
                 _adc_amostra 09CA                    atraso_ms@i 0062                __end_of___lmul 09CA  
               __pidataCOMRAM 0BE6                    ?_PWM1_Init 006E           start_initialization 0B3A  
           __size_ofi2___lmul 0056                    ?i2___lldiv 000D                      ??___lmul 0068  
            __CFG_LPT1OSC$OFF 000000             __size_of_adc_init 000E                   __pbssCOMRAM 002F  
               __pcstackBANK0 0060        __size_of_PWM1_Set_Duty 00AE                     __pintcode 0008  
                    ?___aldiv 0060                      ?___lldiv 006C         __end_ofi2_adc_amostra 0A98  
__size_of_serial_rx_str_until 011A                   ??_PWM1_Init 0070                     _atraso_ms 0AEE  
                 ??i2___lldiv 0015                __size_of_setup 0088           i2PWM1_Set_Duty@temp 001D  
                  PWM1_Init@f 006E                atraso_ms@valor 0060               ___aldiv@divisor 0064  
             ___aldiv@counter 0068                 PWM1_Init@temp 0074                      _PIE1bits 000F9D  
                    _PIE2bits 000FA0                      i2u119_45 0A72                      i2u128_40 00AC  
                    i2u128_46 00AE                      i2u139_40 019A                      _PIR1bits 000F9E  
                    _PIR2bits 000FA1                 ??_serial_init 0060                     _serial_tx 0BD8  
            __CFG_WDTPS$32768 000000                 _PWM1_Set_Duty 070A                    _ADCON0bits 000FC2  
                    i2___lmul 0A98                    ?_atraso_ms 0060       serial_rx_str_until@buff 0066  
     serial_rx_str_until@term 006A       serial_rx_str_until@size 0068      __size_ofi2_PWM1_Set_Duty 0092  
           ___lmul@multiplier 0060                      __Hrparam 0000                      __Lrparam 0000  
                  ?_serial_tx 0001                ?_PWM1_Set_Duty 0001                  ?_adc_amostra 0060  
            __size_of___aldiv 011A              __size_of___lldiv 00BC           __end_of_serial_init 0BCA  
                    _adc_init 0BCA                      __ptext10 054E                      __ptext11 0BD8  
                    __ptext12 0328                      __ptext13 0AEE                      __ptext14 09CA  
                    __ptext16 0A3E                      __ptext17 07B8                      __ptext18 0A98  
                    __ptext19 08D2                      _aquec_on 0037                 __size_of_main 0022  
               __size_of_loop 0100                 __size_of_itrp 0206                      int$flags 003C  
                serial_tx@val 0060         __CFG_CPUDIV$OSC1_PLL2 000000                   ??_atraso_ms 0062  
                  _INTCONbits 000FF2         i2___lmul@multiplicand 0005                      intlevel2 0000  
         _serial_rx_str_until 0328             ??i2_PWM1_Set_Duty 001A              ___lldiv@dividend 006C  
             ??_PWM1_Set_Duty 0079                   ??_serial_tx 0060                   _serial_init 0BB6  
        ?_serial_rx_str_until 0066                   _temperatura 002F              ___lldiv@quotient 0074  
            adc_amostra@canal 0066                  ___aldiv@sign 0069                    _PWM1_Start 0BA0  
